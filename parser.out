Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> bloc
Rule 2     bloc -> bloc statement
Rule 3     bloc -> statement
Rule 4     statement -> NAME EQUAL expression COLON
Rule 5     statement -> PRINT LPAREN expr_list RPAREN COLON
Rule 6     expression -> expression PLUS expression
Rule 7     expression -> expression MINUS expression
Rule 8     expression -> expression TIMES expression
Rule 9     expression -> expression OR expression
Rule 10    expression -> expression AND expression
Rule 11    expression -> expression EQUALS expression
Rule 12    expression -> expression LOWER expression
Rule 13    expression -> expression HIGHER expression
Rule 14    expression -> expression HIGHEROREQUAL expression
Rule 15    expression -> expression LOWEROREQUAL expression
Rule 16    expression -> expression DIFFERENT expression
Rule 17    expression -> expression DIVIDE expression
Rule 18    expression -> LPAREN expression RPAREN
Rule 19    expression -> NUMBER
Rule 20    expression -> NAME
Rule 21    expression -> array
Rule 22    statement -> NAME PLUSEQUAL expression COLON
Rule 23    statement -> NAME MINUSEQUAL expression COLON
Rule 24    statement -> NAME INCREMENT COLON
Rule 25    statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
Rule 26    statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
Rule 27    statement -> WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
Rule 28    statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
Rule 29    statement -> DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
Rule 30    statement -> NAME LPAREN RPAREN COLON
Rule 31    statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
Rule 32    param_list -> param_list COMMA NAME
Rule 33    param_list -> NAME
Rule 34    arg_list -> arg_list COMMA expression
Rule 35    arg_list -> expression
Rule 36    statement -> NAME LPAREN arg_list RPAREN COLON
Rule 37    expr_list -> expression
Rule 38    statement -> DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
Rule 39    return_statement -> RETURN expression COLON
Rule 40    statement -> NAME EQUAL NAME LPAREN RPAREN COLON
Rule 41    array -> LBRACKET RBRACKET
Rule 42    array -> LBRACKET expr_list RBRACKET
Rule 43    expr_list -> expr_list COMMA expression
Rule 44    expression -> expression LBRACKET expression RBRACKET
Rule 45    statement -> expression DOT POP LPAREN expression RPAREN COLON
Rule 46    statement -> expression DOT APPEND LPAREN expression RPAREN COLON
Rule 47    statement -> expression DOT COUNT LPAREN expression RPAREN COLON
Rule 48    statement -> expression DOT LENGTH LPAREN RPAREN COLON
Rule 49    statement -> expression DOT SORT LPAREN RPAREN COLON
Rule 50    statement -> expression DOT REVERSE LPAREN RPAREN COLON
Rule 51    statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT
Rule 52    statement -> NAME EQUAL NAME LPAREN arg_list RPAREN COLON

Terminals, with rules where they appear

AND                  : 10
APPEND               : 46
BRACELEFT            : 25 26 26 27 28 29 31 38 51
BRACERIGHT           : 25 26 26 27 28 29 31 38 51
COLON                : 4 5 22 23 24 30 36 39 40 45 46 47 48 49 50 52
COMMA                : 32 34 43
COUNT                : 47
DEF                  : 29 31 38 51
DIFFERENT            : 16
DIVIDE               : 17
DOT                  : 45 46 47 48 49 50
ELSE                 : 26
EQUAL                : 4 40 52
EQUALS               : 11
FOR                  : 28
FROM                 : 28
HIGHER               : 13
HIGHEROREQUAL        : 14
IF                   : 25 26
INCREMENT            : 24
LBRACKET             : 41 42 44
LENGTH               : 48
LOWER                : 12
LOWEROREQUAL         : 15
LPAREN               : 5 18 25 26 27 28 29 30 31 36 38 40 45 46 47 48 49 50 51 52
MINUS                : 7
MINUSEQUAL           : 23
NAME                 : 4 20 22 23 24 28 29 30 31 32 33 36 38 40 40 51 52 52
NUMBER               : 19
OR                   : 9
PLUS                 : 6
PLUSEQUAL            : 22
POP                  : 45
PRINT                : 5
RBRACKET             : 41 42 44
RETURN               : 39
REVERSE              : 50
RPAREN               : 5 18 25 26 27 28 29 30 31 36 38 40 45 46 47 48 49 50 51 52
SORT                 : 49
TIMES                : 8
TO                   : 28
WHILE                : 27
error                : 

Nonterminals, with rules where they appear

arg_list             : 34 36 52
array                : 21
bloc                 : 1 2 25 26 26 27 28 29 31
expr_list            : 5 42 43
expression           : 4 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 22 23 25 26 27 28 28 34 35 37 39 43 44 44 45 45 46 46 47 47 48 49 50
param_list           : 31 32 51
return_statement     : 38 51
start                : 0
statement            : 2 3

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . bloc
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUAL expression COLON
    (5) statement -> . PRINT LPAREN expr_list RPAREN COLON
    (22) statement -> . NAME PLUSEQUAL expression COLON
    (23) statement -> . NAME MINUSEQUAL expression COLON
    (24) statement -> . NAME INCREMENT COLON
    (25) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (27) statement -> . WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (28) statement -> . FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (29) statement -> . DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (30) statement -> . NAME LPAREN RPAREN COLON
    (31) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (36) statement -> . NAME LPAREN arg_list RPAREN COLON
    (38) statement -> . DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (40) statement -> . NAME EQUAL NAME LPAREN RPAREN COLON
    (45) statement -> . expression DOT POP LPAREN expression RPAREN COLON
    (46) statement -> . expression DOT APPEND LPAREN expression RPAREN COLON
    (47) statement -> . expression DOT COUNT LPAREN expression RPAREN COLON
    (48) statement -> . expression DOT LENGTH LPAREN RPAREN COLON
    (49) statement -> . expression DOT SORT LPAREN RPAREN COLON
    (50) statement -> . expression DOT REVERSE LPAREN RPAREN COLON
    (51) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT
    (52) statement -> . NAME EQUAL NAME LPAREN arg_list RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    NAME            shift and go to state 4
    PRINT           shift and go to state 6
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    DEF             shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    LBRACKET        shift and go to state 14

    start                          shift and go to state 1
    bloc                           shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 5
    array                          shift and go to state 13

state 1

    (0) S' -> start .



state 2

    (1) start -> bloc .
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUAL expression COLON
    (5) statement -> . PRINT LPAREN expr_list RPAREN COLON
    (22) statement -> . NAME PLUSEQUAL expression COLON
    (23) statement -> . NAME MINUSEQUAL expression COLON
    (24) statement -> . NAME INCREMENT COLON
    (25) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (27) statement -> . WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (28) statement -> . FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (29) statement -> . DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (30) statement -> . NAME LPAREN RPAREN COLON
    (31) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (36) statement -> . NAME LPAREN arg_list RPAREN COLON
    (38) statement -> . DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (40) statement -> . NAME EQUAL NAME LPAREN RPAREN COLON
    (45) statement -> . expression DOT POP LPAREN expression RPAREN COLON
    (46) statement -> . expression DOT APPEND LPAREN expression RPAREN COLON
    (47) statement -> . expression DOT COUNT LPAREN expression RPAREN COLON
    (48) statement -> . expression DOT LENGTH LPAREN RPAREN COLON
    (49) statement -> . expression DOT SORT LPAREN RPAREN COLON
    (50) statement -> . expression DOT REVERSE LPAREN RPAREN COLON
    (51) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT
    (52) statement -> . NAME EQUAL NAME LPAREN arg_list RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    $end            reduce using rule 1 (start -> bloc .)
    NAME            shift and go to state 4
    PRINT           shift and go to state 6
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    DEF             shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    LBRACKET        shift and go to state 14

    statement                      shift and go to state 15
    expression                     shift and go to state 5
    array                          shift and go to state 13

state 3

    (3) bloc -> statement .

    NAME            reduce using rule 3 (bloc -> statement .)
    PRINT           reduce using rule 3 (bloc -> statement .)
    IF              reduce using rule 3 (bloc -> statement .)
    WHILE           reduce using rule 3 (bloc -> statement .)
    FOR             reduce using rule 3 (bloc -> statement .)
    DEF             reduce using rule 3 (bloc -> statement .)
    LPAREN          reduce using rule 3 (bloc -> statement .)
    NUMBER          reduce using rule 3 (bloc -> statement .)
    LBRACKET        reduce using rule 3 (bloc -> statement .)
    $end            reduce using rule 3 (bloc -> statement .)
    BRACERIGHT      reduce using rule 3 (bloc -> statement .)


state 4

    (4) statement -> NAME . EQUAL expression COLON
    (22) statement -> NAME . PLUSEQUAL expression COLON
    (23) statement -> NAME . MINUSEQUAL expression COLON
    (24) statement -> NAME . INCREMENT COLON
    (30) statement -> NAME . LPAREN RPAREN COLON
    (36) statement -> NAME . LPAREN arg_list RPAREN COLON
    (40) statement -> NAME . EQUAL NAME LPAREN RPAREN COLON
    (52) statement -> NAME . EQUAL NAME LPAREN arg_list RPAREN COLON
    (20) expression -> NAME .

    EQUAL           shift and go to state 16
    PLUSEQUAL       shift and go to state 17
    MINUSEQUAL      shift and go to state 18
    INCREMENT       shift and go to state 19
    LPAREN          shift and go to state 20
    DOT             reduce using rule 20 (expression -> NAME .)
    PLUS            reduce using rule 20 (expression -> NAME .)
    MINUS           reduce using rule 20 (expression -> NAME .)
    TIMES           reduce using rule 20 (expression -> NAME .)
    OR              reduce using rule 20 (expression -> NAME .)
    AND             reduce using rule 20 (expression -> NAME .)
    EQUALS          reduce using rule 20 (expression -> NAME .)
    LOWER           reduce using rule 20 (expression -> NAME .)
    HIGHER          reduce using rule 20 (expression -> NAME .)
    HIGHEROREQUAL   reduce using rule 20 (expression -> NAME .)
    LOWEROREQUAL    reduce using rule 20 (expression -> NAME .)
    DIFFERENT       reduce using rule 20 (expression -> NAME .)
    DIVIDE          reduce using rule 20 (expression -> NAME .)
    LBRACKET        reduce using rule 20 (expression -> NAME .)


state 5

    (45) statement -> expression . DOT POP LPAREN expression RPAREN COLON
    (46) statement -> expression . DOT APPEND LPAREN expression RPAREN COLON
    (47) statement -> expression . DOT COUNT LPAREN expression RPAREN COLON
    (48) statement -> expression . DOT LENGTH LPAREN RPAREN COLON
    (49) statement -> expression . DOT SORT LPAREN RPAREN COLON
    (50) statement -> expression . DOT REVERSE LPAREN RPAREN COLON
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    DOT             shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 6

    (5) statement -> PRINT . LPAREN expr_list RPAREN COLON

    LPAREN          shift and go to state 35


state 7

    (18) expression -> LPAREN . expression RPAREN
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 36
    array                          shift and go to state 13

state 8

    (25) statement -> IF . LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> IF . LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT

    LPAREN          shift and go to state 38


state 9

    (27) statement -> WHILE . LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT

    LPAREN          shift and go to state 39


state 10

    (28) statement -> FOR . LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT

    LPAREN          shift and go to state 40


state 11

    (29) statement -> DEF . NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (31) statement -> DEF . NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (38) statement -> DEF . NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (51) statement -> DEF . NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT

    NAME            shift and go to state 41


state 12

    (19) expression -> NUMBER .

    DOT             reduce using rule 19 (expression -> NUMBER .)
    PLUS            reduce using rule 19 (expression -> NUMBER .)
    MINUS           reduce using rule 19 (expression -> NUMBER .)
    TIMES           reduce using rule 19 (expression -> NUMBER .)
    OR              reduce using rule 19 (expression -> NUMBER .)
    AND             reduce using rule 19 (expression -> NUMBER .)
    EQUALS          reduce using rule 19 (expression -> NUMBER .)
    LOWER           reduce using rule 19 (expression -> NUMBER .)
    HIGHER          reduce using rule 19 (expression -> NUMBER .)
    HIGHEROREQUAL   reduce using rule 19 (expression -> NUMBER .)
    LOWEROREQUAL    reduce using rule 19 (expression -> NUMBER .)
    DIFFERENT       reduce using rule 19 (expression -> NUMBER .)
    DIVIDE          reduce using rule 19 (expression -> NUMBER .)
    LBRACKET        reduce using rule 19 (expression -> NUMBER .)
    RPAREN          reduce using rule 19 (expression -> NUMBER .)
    RBRACKET        reduce using rule 19 (expression -> NUMBER .)
    COMMA           reduce using rule 19 (expression -> NUMBER .)
    COLON           reduce using rule 19 (expression -> NUMBER .)
    TO              reduce using rule 19 (expression -> NUMBER .)


state 13

    (21) expression -> array .

    DOT             reduce using rule 21 (expression -> array .)
    PLUS            reduce using rule 21 (expression -> array .)
    MINUS           reduce using rule 21 (expression -> array .)
    TIMES           reduce using rule 21 (expression -> array .)
    OR              reduce using rule 21 (expression -> array .)
    AND             reduce using rule 21 (expression -> array .)
    EQUALS          reduce using rule 21 (expression -> array .)
    LOWER           reduce using rule 21 (expression -> array .)
    HIGHER          reduce using rule 21 (expression -> array .)
    HIGHEROREQUAL   reduce using rule 21 (expression -> array .)
    LOWEROREQUAL    reduce using rule 21 (expression -> array .)
    DIFFERENT       reduce using rule 21 (expression -> array .)
    DIVIDE          reduce using rule 21 (expression -> array .)
    LBRACKET        reduce using rule 21 (expression -> array .)
    RPAREN          reduce using rule 21 (expression -> array .)
    RBRACKET        reduce using rule 21 (expression -> array .)
    COMMA           reduce using rule 21 (expression -> array .)
    COLON           reduce using rule 21 (expression -> array .)
    TO              reduce using rule 21 (expression -> array .)


state 14

    (41) array -> LBRACKET . RBRACKET
    (42) array -> LBRACKET . expr_list RBRACKET
    (37) expr_list -> . expression
    (43) expr_list -> . expr_list COMMA expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    RBRACKET        shift and go to state 42
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expr_list                      shift and go to state 43
    expression                     shift and go to state 44
    array                          shift and go to state 13

state 15

    (2) bloc -> bloc statement .

    NAME            reduce using rule 2 (bloc -> bloc statement .)
    PRINT           reduce using rule 2 (bloc -> bloc statement .)
    IF              reduce using rule 2 (bloc -> bloc statement .)
    WHILE           reduce using rule 2 (bloc -> bloc statement .)
    FOR             reduce using rule 2 (bloc -> bloc statement .)
    DEF             reduce using rule 2 (bloc -> bloc statement .)
    LPAREN          reduce using rule 2 (bloc -> bloc statement .)
    NUMBER          reduce using rule 2 (bloc -> bloc statement .)
    LBRACKET        reduce using rule 2 (bloc -> bloc statement .)
    $end            reduce using rule 2 (bloc -> bloc statement .)
    BRACERIGHT      reduce using rule 2 (bloc -> bloc statement .)


state 16

    (4) statement -> NAME EQUAL . expression COLON
    (40) statement -> NAME EQUAL . NAME LPAREN RPAREN COLON
    (52) statement -> NAME EQUAL . NAME LPAREN arg_list RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    NAME            shift and go to state 45
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 46
    array                          shift and go to state 13

state 17

    (22) statement -> NAME PLUSEQUAL . expression COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 47
    array                          shift and go to state 13

state 18

    (23) statement -> NAME MINUSEQUAL . expression COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 48
    array                          shift and go to state 13

state 19

    (24) statement -> NAME INCREMENT . COLON

    COLON           shift and go to state 49


state 20

    (30) statement -> NAME LPAREN . RPAREN COLON
    (36) statement -> NAME LPAREN . arg_list RPAREN COLON
    (34) arg_list -> . arg_list COMMA expression
    (35) arg_list -> . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    RPAREN          shift and go to state 50
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    arg_list                       shift and go to state 51
    expression                     shift and go to state 52
    array                          shift and go to state 13

state 21

    (45) statement -> expression DOT . POP LPAREN expression RPAREN COLON
    (46) statement -> expression DOT . APPEND LPAREN expression RPAREN COLON
    (47) statement -> expression DOT . COUNT LPAREN expression RPAREN COLON
    (48) statement -> expression DOT . LENGTH LPAREN RPAREN COLON
    (49) statement -> expression DOT . SORT LPAREN RPAREN COLON
    (50) statement -> expression DOT . REVERSE LPAREN RPAREN COLON

    POP             shift and go to state 53
    APPEND          shift and go to state 54
    COUNT           shift and go to state 55
    LENGTH          shift and go to state 56
    SORT            shift and go to state 57
    REVERSE         shift and go to state 58


state 22

    (6) expression -> expression PLUS . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 59
    array                          shift and go to state 13

state 23

    (7) expression -> expression MINUS . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 60
    array                          shift and go to state 13

state 24

    (8) expression -> expression TIMES . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 61
    array                          shift and go to state 13

state 25

    (9) expression -> expression OR . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 62
    array                          shift and go to state 13

state 26

    (10) expression -> expression AND . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 63
    array                          shift and go to state 13

state 27

    (11) expression -> expression EQUALS . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 64
    array                          shift and go to state 13

state 28

    (12) expression -> expression LOWER . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 65
    array                          shift and go to state 13

state 29

    (13) expression -> expression HIGHER . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 66
    array                          shift and go to state 13

state 30

    (14) expression -> expression HIGHEROREQUAL . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 67
    array                          shift and go to state 13

state 31

    (15) expression -> expression LOWEROREQUAL . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 68
    array                          shift and go to state 13

state 32

    (16) expression -> expression DIFFERENT . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 69
    array                          shift and go to state 13

state 33

    (17) expression -> expression DIVIDE . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 70
    array                          shift and go to state 13

state 34

    (44) expression -> expression LBRACKET . expression RBRACKET
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 71
    array                          shift and go to state 13

state 35

    (5) statement -> PRINT LPAREN . expr_list RPAREN COLON
    (37) expr_list -> . expression
    (43) expr_list -> . expr_list COMMA expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expr_list                      shift and go to state 72
    expression                     shift and go to state 44
    array                          shift and go to state 13

state 36

    (18) expression -> LPAREN expression . RPAREN
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 73
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 37

    (20) expression -> NAME .

    RPAREN          reduce using rule 20 (expression -> NAME .)
    PLUS            reduce using rule 20 (expression -> NAME .)
    MINUS           reduce using rule 20 (expression -> NAME .)
    TIMES           reduce using rule 20 (expression -> NAME .)
    OR              reduce using rule 20 (expression -> NAME .)
    AND             reduce using rule 20 (expression -> NAME .)
    EQUALS          reduce using rule 20 (expression -> NAME .)
    LOWER           reduce using rule 20 (expression -> NAME .)
    HIGHER          reduce using rule 20 (expression -> NAME .)
    HIGHEROREQUAL   reduce using rule 20 (expression -> NAME .)
    LOWEROREQUAL    reduce using rule 20 (expression -> NAME .)
    DIFFERENT       reduce using rule 20 (expression -> NAME .)
    DIVIDE          reduce using rule 20 (expression -> NAME .)
    LBRACKET        reduce using rule 20 (expression -> NAME .)
    RBRACKET        reduce using rule 20 (expression -> NAME .)
    COMMA           reduce using rule 20 (expression -> NAME .)
    COLON           reduce using rule 20 (expression -> NAME .)
    DOT             reduce using rule 20 (expression -> NAME .)
    TO              reduce using rule 20 (expression -> NAME .)


state 38

    (25) statement -> IF LPAREN . expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> IF LPAREN . expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 74
    array                          shift and go to state 13

state 39

    (27) statement -> WHILE LPAREN . expression RPAREN BRACELEFT bloc BRACERIGHT
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 75
    array                          shift and go to state 13

state 40

    (28) statement -> FOR LPAREN . NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT

    NAME            shift and go to state 76


state 41

    (29) statement -> DEF NAME . LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (31) statement -> DEF NAME . LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (38) statement -> DEF NAME . LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (51) statement -> DEF NAME . LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT

    LPAREN          shift and go to state 77


state 42

    (41) array -> LBRACKET RBRACKET .

    DOT             reduce using rule 41 (array -> LBRACKET RBRACKET .)
    PLUS            reduce using rule 41 (array -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 41 (array -> LBRACKET RBRACKET .)
    TIMES           reduce using rule 41 (array -> LBRACKET RBRACKET .)
    OR              reduce using rule 41 (array -> LBRACKET RBRACKET .)
    AND             reduce using rule 41 (array -> LBRACKET RBRACKET .)
    EQUALS          reduce using rule 41 (array -> LBRACKET RBRACKET .)
    LOWER           reduce using rule 41 (array -> LBRACKET RBRACKET .)
    HIGHER          reduce using rule 41 (array -> LBRACKET RBRACKET .)
    HIGHEROREQUAL   reduce using rule 41 (array -> LBRACKET RBRACKET .)
    LOWEROREQUAL    reduce using rule 41 (array -> LBRACKET RBRACKET .)
    DIFFERENT       reduce using rule 41 (array -> LBRACKET RBRACKET .)
    DIVIDE          reduce using rule 41 (array -> LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 41 (array -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 41 (array -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 41 (array -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 41 (array -> LBRACKET RBRACKET .)
    COLON           reduce using rule 41 (array -> LBRACKET RBRACKET .)
    TO              reduce using rule 41 (array -> LBRACKET RBRACKET .)


state 43

    (42) array -> LBRACKET expr_list . RBRACKET
    (43) expr_list -> expr_list . COMMA expression

    RBRACKET        shift and go to state 78
    COMMA           shift and go to state 79


state 44

    (37) expr_list -> expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    RBRACKET        reduce using rule 37 (expr_list -> expression .)
    COMMA           reduce using rule 37 (expr_list -> expression .)
    RPAREN          reduce using rule 37 (expr_list -> expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 45

    (40) statement -> NAME EQUAL NAME . LPAREN RPAREN COLON
    (52) statement -> NAME EQUAL NAME . LPAREN arg_list RPAREN COLON
    (20) expression -> NAME .

    LPAREN          shift and go to state 80
    COLON           reduce using rule 20 (expression -> NAME .)
    PLUS            reduce using rule 20 (expression -> NAME .)
    MINUS           reduce using rule 20 (expression -> NAME .)
    TIMES           reduce using rule 20 (expression -> NAME .)
    OR              reduce using rule 20 (expression -> NAME .)
    AND             reduce using rule 20 (expression -> NAME .)
    EQUALS          reduce using rule 20 (expression -> NAME .)
    LOWER           reduce using rule 20 (expression -> NAME .)
    HIGHER          reduce using rule 20 (expression -> NAME .)
    HIGHEROREQUAL   reduce using rule 20 (expression -> NAME .)
    LOWEROREQUAL    reduce using rule 20 (expression -> NAME .)
    DIFFERENT       reduce using rule 20 (expression -> NAME .)
    DIVIDE          reduce using rule 20 (expression -> NAME .)
    LBRACKET        reduce using rule 20 (expression -> NAME .)


state 46

    (4) statement -> NAME EQUAL expression . COLON
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    COLON           shift and go to state 81
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 47

    (22) statement -> NAME PLUSEQUAL expression . COLON
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    COLON           shift and go to state 82
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 48

    (23) statement -> NAME MINUSEQUAL expression . COLON
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    COLON           shift and go to state 83
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 49

    (24) statement -> NAME INCREMENT COLON .

    NAME            reduce using rule 24 (statement -> NAME INCREMENT COLON .)
    PRINT           reduce using rule 24 (statement -> NAME INCREMENT COLON .)
    IF              reduce using rule 24 (statement -> NAME INCREMENT COLON .)
    WHILE           reduce using rule 24 (statement -> NAME INCREMENT COLON .)
    FOR             reduce using rule 24 (statement -> NAME INCREMENT COLON .)
    DEF             reduce using rule 24 (statement -> NAME INCREMENT COLON .)
    LPAREN          reduce using rule 24 (statement -> NAME INCREMENT COLON .)
    NUMBER          reduce using rule 24 (statement -> NAME INCREMENT COLON .)
    LBRACKET        reduce using rule 24 (statement -> NAME INCREMENT COLON .)
    $end            reduce using rule 24 (statement -> NAME INCREMENT COLON .)
    BRACERIGHT      reduce using rule 24 (statement -> NAME INCREMENT COLON .)


state 50

    (30) statement -> NAME LPAREN RPAREN . COLON

    COLON           shift and go to state 84


state 51

    (36) statement -> NAME LPAREN arg_list . RPAREN COLON
    (34) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 85
    COMMA           shift and go to state 86


state 52

    (35) arg_list -> expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 35 (arg_list -> expression .)
    COMMA           reduce using rule 35 (arg_list -> expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 53

    (45) statement -> expression DOT POP . LPAREN expression RPAREN COLON

    LPAREN          shift and go to state 87


state 54

    (46) statement -> expression DOT APPEND . LPAREN expression RPAREN COLON

    LPAREN          shift and go to state 88


state 55

    (47) statement -> expression DOT COUNT . LPAREN expression RPAREN COLON

    LPAREN          shift and go to state 89


state 56

    (48) statement -> expression DOT LENGTH . LPAREN RPAREN COLON

    LPAREN          shift and go to state 90


state 57

    (49) statement -> expression DOT SORT . LPAREN RPAREN COLON

    LPAREN          shift and go to state 91


state 58

    (50) statement -> expression DOT REVERSE . LPAREN RPAREN COLON

    LPAREN          shift and go to state 92


state 59

    (6) expression -> expression PLUS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for HIGHEROREQUAL resolved as shift
  ! shift/reduce conflict for LOWEROREQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    DOT             reduce using rule 6 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 6 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 6 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 6 (expression -> expression PLUS expression .)
    COLON           reduce using rule 6 (expression -> expression PLUS expression .)
    TO              reduce using rule 6 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34

  ! PLUS            [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! EQUALS          [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! LOWER           [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! HIGHER          [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! HIGHEROREQUAL   [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! LOWEROREQUAL    [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! DIFFERENT       [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression PLUS expression .) ]
  ! LBRACKET        [ reduce using rule 6 (expression -> expression PLUS expression .) ]


state 60

    (7) expression -> expression MINUS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for HIGHEROREQUAL resolved as shift
  ! shift/reduce conflict for LOWEROREQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    DOT             reduce using rule 7 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 7 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 7 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 7 (expression -> expression MINUS expression .)
    COLON           reduce using rule 7 (expression -> expression MINUS expression .)
    TO              reduce using rule 7 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34

  ! PLUS            [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! EQUALS          [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! LOWER           [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! HIGHER          [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! HIGHEROREQUAL   [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! LOWEROREQUAL    [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! DIFFERENT       [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 7 (expression -> expression MINUS expression .) ]


state 61

    (8) expression -> expression TIMES expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for HIGHEROREQUAL resolved as shift
  ! shift/reduce conflict for LOWEROREQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    DOT             reduce using rule 8 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 8 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 8 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 8 (expression -> expression TIMES expression .)
    COLON           reduce using rule 8 (expression -> expression TIMES expression .)
    TO              reduce using rule 8 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34

  ! PLUS            [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! EQUALS          [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! LOWER           [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! HIGHER          [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! HIGHEROREQUAL   [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! LOWEROREQUAL    [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! DIFFERENT       [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression TIMES expression .) ]
  ! LBRACKET        [ reduce using rule 8 (expression -> expression TIMES expression .) ]


state 62

    (9) expression -> expression OR expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for HIGHEROREQUAL resolved as shift
  ! shift/reduce conflict for LOWEROREQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    DOT             reduce using rule 9 (expression -> expression OR expression .)
    RPAREN          reduce using rule 9 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 9 (expression -> expression OR expression .)
    COMMA           reduce using rule 9 (expression -> expression OR expression .)
    COLON           reduce using rule 9 (expression -> expression OR expression .)
    TO              reduce using rule 9 (expression -> expression OR expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34

  ! PLUS            [ reduce using rule 9 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 9 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 9 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 9 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 9 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 9 (expression -> expression OR expression .) ]
  ! LOWER           [ reduce using rule 9 (expression -> expression OR expression .) ]
  ! HIGHER          [ reduce using rule 9 (expression -> expression OR expression .) ]
  ! HIGHEROREQUAL   [ reduce using rule 9 (expression -> expression OR expression .) ]
  ! LOWEROREQUAL    [ reduce using rule 9 (expression -> expression OR expression .) ]
  ! DIFFERENT       [ reduce using rule 9 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression OR expression .) ]
  ! LBRACKET        [ reduce using rule 9 (expression -> expression OR expression .) ]


state 63

    (10) expression -> expression AND expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for HIGHEROREQUAL resolved as shift
  ! shift/reduce conflict for LOWEROREQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    DOT             reduce using rule 10 (expression -> expression AND expression .)
    RPAREN          reduce using rule 10 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 10 (expression -> expression AND expression .)
    COMMA           reduce using rule 10 (expression -> expression AND expression .)
    COLON           reduce using rule 10 (expression -> expression AND expression .)
    TO              reduce using rule 10 (expression -> expression AND expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34

  ! PLUS            [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! LOWER           [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! HIGHER          [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! HIGHEROREQUAL   [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! LOWEROREQUAL    [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! DIFFERENT       [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression AND expression .) ]
  ! LBRACKET        [ reduce using rule 10 (expression -> expression AND expression .) ]


state 64

    (11) expression -> expression EQUALS expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for HIGHEROREQUAL resolved as shift
  ! shift/reduce conflict for LOWEROREQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    DOT             reduce using rule 11 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 11 (expression -> expression EQUALS expression .)
    RBRACKET        reduce using rule 11 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 11 (expression -> expression EQUALS expression .)
    COLON           reduce using rule 11 (expression -> expression EQUALS expression .)
    TO              reduce using rule 11 (expression -> expression EQUALS expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34

  ! PLUS            [ reduce using rule 11 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 11 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 11 (expression -> expression EQUALS expression .) ]
  ! AND             [ reduce using rule 11 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 11 (expression -> expression EQUALS expression .) ]
  ! LOWER           [ reduce using rule 11 (expression -> expression EQUALS expression .) ]
  ! HIGHER          [ reduce using rule 11 (expression -> expression EQUALS expression .) ]
  ! HIGHEROREQUAL   [ reduce using rule 11 (expression -> expression EQUALS expression .) ]
  ! LOWEROREQUAL    [ reduce using rule 11 (expression -> expression EQUALS expression .) ]
  ! DIFFERENT       [ reduce using rule 11 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> expression EQUALS expression .) ]
  ! LBRACKET        [ reduce using rule 11 (expression -> expression EQUALS expression .) ]


state 65

    (12) expression -> expression LOWER expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for HIGHEROREQUAL resolved as shift
  ! shift/reduce conflict for LOWEROREQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    DOT             reduce using rule 12 (expression -> expression LOWER expression .)
    RPAREN          reduce using rule 12 (expression -> expression LOWER expression .)
    RBRACKET        reduce using rule 12 (expression -> expression LOWER expression .)
    COMMA           reduce using rule 12 (expression -> expression LOWER expression .)
    COLON           reduce using rule 12 (expression -> expression LOWER expression .)
    TO              reduce using rule 12 (expression -> expression LOWER expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34

  ! PLUS            [ reduce using rule 12 (expression -> expression LOWER expression .) ]
  ! MINUS           [ reduce using rule 12 (expression -> expression LOWER expression .) ]
  ! TIMES           [ reduce using rule 12 (expression -> expression LOWER expression .) ]
  ! OR              [ reduce using rule 12 (expression -> expression LOWER expression .) ]
  ! AND             [ reduce using rule 12 (expression -> expression LOWER expression .) ]
  ! EQUALS          [ reduce using rule 12 (expression -> expression LOWER expression .) ]
  ! LOWER           [ reduce using rule 12 (expression -> expression LOWER expression .) ]
  ! HIGHER          [ reduce using rule 12 (expression -> expression LOWER expression .) ]
  ! HIGHEROREQUAL   [ reduce using rule 12 (expression -> expression LOWER expression .) ]
  ! LOWEROREQUAL    [ reduce using rule 12 (expression -> expression LOWER expression .) ]
  ! DIFFERENT       [ reduce using rule 12 (expression -> expression LOWER expression .) ]
  ! DIVIDE          [ reduce using rule 12 (expression -> expression LOWER expression .) ]
  ! LBRACKET        [ reduce using rule 12 (expression -> expression LOWER expression .) ]


state 66

    (13) expression -> expression HIGHER expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for HIGHEROREQUAL resolved as shift
  ! shift/reduce conflict for LOWEROREQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    DOT             reduce using rule 13 (expression -> expression HIGHER expression .)
    RPAREN          reduce using rule 13 (expression -> expression HIGHER expression .)
    RBRACKET        reduce using rule 13 (expression -> expression HIGHER expression .)
    COMMA           reduce using rule 13 (expression -> expression HIGHER expression .)
    COLON           reduce using rule 13 (expression -> expression HIGHER expression .)
    TO              reduce using rule 13 (expression -> expression HIGHER expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34

  ! PLUS            [ reduce using rule 13 (expression -> expression HIGHER expression .) ]
  ! MINUS           [ reduce using rule 13 (expression -> expression HIGHER expression .) ]
  ! TIMES           [ reduce using rule 13 (expression -> expression HIGHER expression .) ]
  ! OR              [ reduce using rule 13 (expression -> expression HIGHER expression .) ]
  ! AND             [ reduce using rule 13 (expression -> expression HIGHER expression .) ]
  ! EQUALS          [ reduce using rule 13 (expression -> expression HIGHER expression .) ]
  ! LOWER           [ reduce using rule 13 (expression -> expression HIGHER expression .) ]
  ! HIGHER          [ reduce using rule 13 (expression -> expression HIGHER expression .) ]
  ! HIGHEROREQUAL   [ reduce using rule 13 (expression -> expression HIGHER expression .) ]
  ! LOWEROREQUAL    [ reduce using rule 13 (expression -> expression HIGHER expression .) ]
  ! DIFFERENT       [ reduce using rule 13 (expression -> expression HIGHER expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression HIGHER expression .) ]
  ! LBRACKET        [ reduce using rule 13 (expression -> expression HIGHER expression .) ]


state 67

    (14) expression -> expression HIGHEROREQUAL expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for HIGHEROREQUAL resolved as shift
  ! shift/reduce conflict for LOWEROREQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    DOT             reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .)
    RPAREN          reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .)
    RBRACKET        reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .)
    COMMA           reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .)
    COLON           reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .)
    TO              reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34

  ! PLUS            [ reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .) ]
  ! TIMES           [ reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .) ]
  ! OR              [ reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .) ]
  ! AND             [ reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .) ]
  ! EQUALS          [ reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .) ]
  ! LOWER           [ reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .) ]
  ! HIGHER          [ reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .) ]
  ! HIGHEROREQUAL   [ reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .) ]
  ! LOWEROREQUAL    [ reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .) ]
  ! DIFFERENT       [ reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .) ]
  ! LBRACKET        [ reduce using rule 14 (expression -> expression HIGHEROREQUAL expression .) ]


state 68

    (15) expression -> expression LOWEROREQUAL expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for HIGHEROREQUAL resolved as shift
  ! shift/reduce conflict for LOWEROREQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    DOT             reduce using rule 15 (expression -> expression LOWEROREQUAL expression .)
    RPAREN          reduce using rule 15 (expression -> expression LOWEROREQUAL expression .)
    RBRACKET        reduce using rule 15 (expression -> expression LOWEROREQUAL expression .)
    COMMA           reduce using rule 15 (expression -> expression LOWEROREQUAL expression .)
    COLON           reduce using rule 15 (expression -> expression LOWEROREQUAL expression .)
    TO              reduce using rule 15 (expression -> expression LOWEROREQUAL expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34

  ! PLUS            [ reduce using rule 15 (expression -> expression LOWEROREQUAL expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression LOWEROREQUAL expression .) ]
  ! TIMES           [ reduce using rule 15 (expression -> expression LOWEROREQUAL expression .) ]
  ! OR              [ reduce using rule 15 (expression -> expression LOWEROREQUAL expression .) ]
  ! AND             [ reduce using rule 15 (expression -> expression LOWEROREQUAL expression .) ]
  ! EQUALS          [ reduce using rule 15 (expression -> expression LOWEROREQUAL expression .) ]
  ! LOWER           [ reduce using rule 15 (expression -> expression LOWEROREQUAL expression .) ]
  ! HIGHER          [ reduce using rule 15 (expression -> expression LOWEROREQUAL expression .) ]
  ! HIGHEROREQUAL   [ reduce using rule 15 (expression -> expression LOWEROREQUAL expression .) ]
  ! LOWEROREQUAL    [ reduce using rule 15 (expression -> expression LOWEROREQUAL expression .) ]
  ! DIFFERENT       [ reduce using rule 15 (expression -> expression LOWEROREQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression LOWEROREQUAL expression .) ]
  ! LBRACKET        [ reduce using rule 15 (expression -> expression LOWEROREQUAL expression .) ]


state 69

    (16) expression -> expression DIFFERENT expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for HIGHEROREQUAL resolved as shift
  ! shift/reduce conflict for LOWEROREQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    DOT             reduce using rule 16 (expression -> expression DIFFERENT expression .)
    RPAREN          reduce using rule 16 (expression -> expression DIFFERENT expression .)
    RBRACKET        reduce using rule 16 (expression -> expression DIFFERENT expression .)
    COMMA           reduce using rule 16 (expression -> expression DIFFERENT expression .)
    COLON           reduce using rule 16 (expression -> expression DIFFERENT expression .)
    TO              reduce using rule 16 (expression -> expression DIFFERENT expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34

  ! PLUS            [ reduce using rule 16 (expression -> expression DIFFERENT expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression DIFFERENT expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> expression DIFFERENT expression .) ]
  ! OR              [ reduce using rule 16 (expression -> expression DIFFERENT expression .) ]
  ! AND             [ reduce using rule 16 (expression -> expression DIFFERENT expression .) ]
  ! EQUALS          [ reduce using rule 16 (expression -> expression DIFFERENT expression .) ]
  ! LOWER           [ reduce using rule 16 (expression -> expression DIFFERENT expression .) ]
  ! HIGHER          [ reduce using rule 16 (expression -> expression DIFFERENT expression .) ]
  ! HIGHEROREQUAL   [ reduce using rule 16 (expression -> expression DIFFERENT expression .) ]
  ! LOWEROREQUAL    [ reduce using rule 16 (expression -> expression DIFFERENT expression .) ]
  ! DIFFERENT       [ reduce using rule 16 (expression -> expression DIFFERENT expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression DIFFERENT expression .) ]
  ! LBRACKET        [ reduce using rule 16 (expression -> expression DIFFERENT expression .) ]


state 70

    (17) expression -> expression DIVIDE expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LOWER resolved as shift
  ! shift/reduce conflict for HIGHER resolved as shift
  ! shift/reduce conflict for HIGHEROREQUAL resolved as shift
  ! shift/reduce conflict for LOWEROREQUAL resolved as shift
  ! shift/reduce conflict for DIFFERENT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
    DOT             reduce using rule 17 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 17 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 17 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 17 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 17 (expression -> expression DIVIDE expression .)
    TO              reduce using rule 17 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34

  ! PLUS            [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! EQUALS          [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! LOWER           [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! HIGHER          [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! HIGHEROREQUAL   [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! LOWEROREQUAL    [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! DIFFERENT       [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]
  ! LBRACKET        [ reduce using rule 17 (expression -> expression DIVIDE expression .) ]


state 71

    (44) expression -> expression LBRACKET expression . RBRACKET
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    RBRACKET        shift and go to state 93
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 72

    (5) statement -> PRINT LPAREN expr_list . RPAREN COLON
    (43) expr_list -> expr_list . COMMA expression

    RPAREN          shift and go to state 94
    COMMA           shift and go to state 79


state 73

    (18) expression -> LPAREN expression RPAREN .

    DOT             reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LOWER           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    HIGHER          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    HIGHEROREQUAL   reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LOWEROREQUAL    reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    DIFFERENT       reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 18 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 18 (expression -> LPAREN expression RPAREN .)


state 74

    (25) statement -> IF LPAREN expression . RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> IF LPAREN expression . RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 95
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 75

    (27) statement -> WHILE LPAREN expression . RPAREN BRACELEFT bloc BRACERIGHT
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 96
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 76

    (28) statement -> FOR LPAREN NAME . FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT

    FROM            shift and go to state 97


state 77

    (29) statement -> DEF NAME LPAREN . RPAREN BRACELEFT bloc BRACERIGHT
    (31) statement -> DEF NAME LPAREN . param_list RPAREN BRACELEFT bloc BRACERIGHT
    (38) statement -> DEF NAME LPAREN . RPAREN BRACELEFT return_statement BRACERIGHT
    (51) statement -> DEF NAME LPAREN . param_list RPAREN BRACELEFT return_statement BRACERIGHT
    (32) param_list -> . param_list COMMA NAME
    (33) param_list -> . NAME

    RPAREN          shift and go to state 99
    NAME            shift and go to state 98

    param_list                     shift and go to state 100

state 78

    (42) array -> LBRACKET expr_list RBRACKET .

    DOT             reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    PLUS            reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    MINUS           reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    TIMES           reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    OR              reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    AND             reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    EQUALS          reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    LOWER           reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    HIGHER          reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    HIGHEROREQUAL   reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    LOWEROREQUAL    reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    DIFFERENT       reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    DIVIDE          reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    LBRACKET        reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    RPAREN          reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    RBRACKET        reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    COMMA           reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    COLON           reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)
    TO              reduce using rule 42 (array -> LBRACKET expr_list RBRACKET .)


state 79

    (43) expr_list -> expr_list COMMA . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 101
    array                          shift and go to state 13

state 80

    (40) statement -> NAME EQUAL NAME LPAREN . RPAREN COLON
    (52) statement -> NAME EQUAL NAME LPAREN . arg_list RPAREN COLON
    (34) arg_list -> . arg_list COMMA expression
    (35) arg_list -> . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    RPAREN          shift and go to state 102
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    arg_list                       shift and go to state 103
    expression                     shift and go to state 52
    array                          shift and go to state 13

state 81

    (4) statement -> NAME EQUAL expression COLON .

    NAME            reduce using rule 4 (statement -> NAME EQUAL expression COLON .)
    PRINT           reduce using rule 4 (statement -> NAME EQUAL expression COLON .)
    IF              reduce using rule 4 (statement -> NAME EQUAL expression COLON .)
    WHILE           reduce using rule 4 (statement -> NAME EQUAL expression COLON .)
    FOR             reduce using rule 4 (statement -> NAME EQUAL expression COLON .)
    DEF             reduce using rule 4 (statement -> NAME EQUAL expression COLON .)
    LPAREN          reduce using rule 4 (statement -> NAME EQUAL expression COLON .)
    NUMBER          reduce using rule 4 (statement -> NAME EQUAL expression COLON .)
    LBRACKET        reduce using rule 4 (statement -> NAME EQUAL expression COLON .)
    $end            reduce using rule 4 (statement -> NAME EQUAL expression COLON .)
    BRACERIGHT      reduce using rule 4 (statement -> NAME EQUAL expression COLON .)


state 82

    (22) statement -> NAME PLUSEQUAL expression COLON .

    NAME            reduce using rule 22 (statement -> NAME PLUSEQUAL expression COLON .)
    PRINT           reduce using rule 22 (statement -> NAME PLUSEQUAL expression COLON .)
    IF              reduce using rule 22 (statement -> NAME PLUSEQUAL expression COLON .)
    WHILE           reduce using rule 22 (statement -> NAME PLUSEQUAL expression COLON .)
    FOR             reduce using rule 22 (statement -> NAME PLUSEQUAL expression COLON .)
    DEF             reduce using rule 22 (statement -> NAME PLUSEQUAL expression COLON .)
    LPAREN          reduce using rule 22 (statement -> NAME PLUSEQUAL expression COLON .)
    NUMBER          reduce using rule 22 (statement -> NAME PLUSEQUAL expression COLON .)
    LBRACKET        reduce using rule 22 (statement -> NAME PLUSEQUAL expression COLON .)
    $end            reduce using rule 22 (statement -> NAME PLUSEQUAL expression COLON .)
    BRACERIGHT      reduce using rule 22 (statement -> NAME PLUSEQUAL expression COLON .)


state 83

    (23) statement -> NAME MINUSEQUAL expression COLON .

    NAME            reduce using rule 23 (statement -> NAME MINUSEQUAL expression COLON .)
    PRINT           reduce using rule 23 (statement -> NAME MINUSEQUAL expression COLON .)
    IF              reduce using rule 23 (statement -> NAME MINUSEQUAL expression COLON .)
    WHILE           reduce using rule 23 (statement -> NAME MINUSEQUAL expression COLON .)
    FOR             reduce using rule 23 (statement -> NAME MINUSEQUAL expression COLON .)
    DEF             reduce using rule 23 (statement -> NAME MINUSEQUAL expression COLON .)
    LPAREN          reduce using rule 23 (statement -> NAME MINUSEQUAL expression COLON .)
    NUMBER          reduce using rule 23 (statement -> NAME MINUSEQUAL expression COLON .)
    LBRACKET        reduce using rule 23 (statement -> NAME MINUSEQUAL expression COLON .)
    $end            reduce using rule 23 (statement -> NAME MINUSEQUAL expression COLON .)
    BRACERIGHT      reduce using rule 23 (statement -> NAME MINUSEQUAL expression COLON .)


state 84

    (30) statement -> NAME LPAREN RPAREN COLON .

    NAME            reduce using rule 30 (statement -> NAME LPAREN RPAREN COLON .)
    PRINT           reduce using rule 30 (statement -> NAME LPAREN RPAREN COLON .)
    IF              reduce using rule 30 (statement -> NAME LPAREN RPAREN COLON .)
    WHILE           reduce using rule 30 (statement -> NAME LPAREN RPAREN COLON .)
    FOR             reduce using rule 30 (statement -> NAME LPAREN RPAREN COLON .)
    DEF             reduce using rule 30 (statement -> NAME LPAREN RPAREN COLON .)
    LPAREN          reduce using rule 30 (statement -> NAME LPAREN RPAREN COLON .)
    NUMBER          reduce using rule 30 (statement -> NAME LPAREN RPAREN COLON .)
    LBRACKET        reduce using rule 30 (statement -> NAME LPAREN RPAREN COLON .)
    $end            reduce using rule 30 (statement -> NAME LPAREN RPAREN COLON .)
    BRACERIGHT      reduce using rule 30 (statement -> NAME LPAREN RPAREN COLON .)


state 85

    (36) statement -> NAME LPAREN arg_list RPAREN . COLON

    COLON           shift and go to state 104


state 86

    (34) arg_list -> arg_list COMMA . expression
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 105
    array                          shift and go to state 13

state 87

    (45) statement -> expression DOT POP LPAREN . expression RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 106
    array                          shift and go to state 13

state 88

    (46) statement -> expression DOT APPEND LPAREN . expression RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 107
    array                          shift and go to state 13

state 89

    (47) statement -> expression DOT COUNT LPAREN . expression RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 108
    array                          shift and go to state 13

state 90

    (48) statement -> expression DOT LENGTH LPAREN . RPAREN COLON

    RPAREN          shift and go to state 109


state 91

    (49) statement -> expression DOT SORT LPAREN . RPAREN COLON

    RPAREN          shift and go to state 110


state 92

    (50) statement -> expression DOT REVERSE LPAREN . RPAREN COLON

    RPAREN          shift and go to state 111


state 93

    (44) expression -> expression LBRACKET expression RBRACKET .

    DOT             reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    LOWER           reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    HIGHER          reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    HIGHEROREQUAL   reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    LOWEROREQUAL    reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    DIFFERENT       reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    COLON           reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)
    TO              reduce using rule 44 (expression -> expression LBRACKET expression RBRACKET .)


state 94

    (5) statement -> PRINT LPAREN expr_list RPAREN . COLON

    COLON           shift and go to state 112


state 95

    (25) statement -> IF LPAREN expression RPAREN . BRACELEFT bloc BRACERIGHT
    (26) statement -> IF LPAREN expression RPAREN . BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT

    BRACELEFT       shift and go to state 113


state 96

    (27) statement -> WHILE LPAREN expression RPAREN . BRACELEFT bloc BRACERIGHT

    BRACELEFT       shift and go to state 114


state 97

    (28) statement -> FOR LPAREN NAME FROM . expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 115
    array                          shift and go to state 13

state 98

    (33) param_list -> NAME .

    RPAREN          reduce using rule 33 (param_list -> NAME .)
    COMMA           reduce using rule 33 (param_list -> NAME .)


state 99

    (29) statement -> DEF NAME LPAREN RPAREN . BRACELEFT bloc BRACERIGHT
    (38) statement -> DEF NAME LPAREN RPAREN . BRACELEFT return_statement BRACERIGHT

    BRACELEFT       shift and go to state 116


state 100

    (31) statement -> DEF NAME LPAREN param_list . RPAREN BRACELEFT bloc BRACERIGHT
    (51) statement -> DEF NAME LPAREN param_list . RPAREN BRACELEFT return_statement BRACERIGHT
    (32) param_list -> param_list . COMMA NAME

    RPAREN          shift and go to state 117
    COMMA           shift and go to state 118


state 101

    (43) expr_list -> expr_list COMMA expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    RBRACKET        reduce using rule 43 (expr_list -> expr_list COMMA expression .)
    COMMA           reduce using rule 43 (expr_list -> expr_list COMMA expression .)
    RPAREN          reduce using rule 43 (expr_list -> expr_list COMMA expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 102

    (40) statement -> NAME EQUAL NAME LPAREN RPAREN . COLON

    COLON           shift and go to state 119


state 103

    (52) statement -> NAME EQUAL NAME LPAREN arg_list . RPAREN COLON
    (34) arg_list -> arg_list . COMMA expression

    RPAREN          shift and go to state 120
    COMMA           shift and go to state 86


state 104

    (36) statement -> NAME LPAREN arg_list RPAREN COLON .

    NAME            reduce using rule 36 (statement -> NAME LPAREN arg_list RPAREN COLON .)
    PRINT           reduce using rule 36 (statement -> NAME LPAREN arg_list RPAREN COLON .)
    IF              reduce using rule 36 (statement -> NAME LPAREN arg_list RPAREN COLON .)
    WHILE           reduce using rule 36 (statement -> NAME LPAREN arg_list RPAREN COLON .)
    FOR             reduce using rule 36 (statement -> NAME LPAREN arg_list RPAREN COLON .)
    DEF             reduce using rule 36 (statement -> NAME LPAREN arg_list RPAREN COLON .)
    LPAREN          reduce using rule 36 (statement -> NAME LPAREN arg_list RPAREN COLON .)
    NUMBER          reduce using rule 36 (statement -> NAME LPAREN arg_list RPAREN COLON .)
    LBRACKET        reduce using rule 36 (statement -> NAME LPAREN arg_list RPAREN COLON .)
    $end            reduce using rule 36 (statement -> NAME LPAREN arg_list RPAREN COLON .)
    BRACERIGHT      reduce using rule 36 (statement -> NAME LPAREN arg_list RPAREN COLON .)


state 105

    (34) arg_list -> arg_list COMMA expression .
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    RPAREN          reduce using rule 34 (arg_list -> arg_list COMMA expression .)
    COMMA           reduce using rule 34 (arg_list -> arg_list COMMA expression .)
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 106

    (45) statement -> expression DOT POP LPAREN expression . RPAREN COLON
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 121
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 107

    (46) statement -> expression DOT APPEND LPAREN expression . RPAREN COLON
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 122
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 108

    (47) statement -> expression DOT COUNT LPAREN expression . RPAREN COLON
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 123
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 109

    (48) statement -> expression DOT LENGTH LPAREN RPAREN . COLON

    COLON           shift and go to state 124


state 110

    (49) statement -> expression DOT SORT LPAREN RPAREN . COLON

    COLON           shift and go to state 125


state 111

    (50) statement -> expression DOT REVERSE LPAREN RPAREN . COLON

    COLON           shift and go to state 126


state 112

    (5) statement -> PRINT LPAREN expr_list RPAREN COLON .

    NAME            reduce using rule 5 (statement -> PRINT LPAREN expr_list RPAREN COLON .)
    PRINT           reduce using rule 5 (statement -> PRINT LPAREN expr_list RPAREN COLON .)
    IF              reduce using rule 5 (statement -> PRINT LPAREN expr_list RPAREN COLON .)
    WHILE           reduce using rule 5 (statement -> PRINT LPAREN expr_list RPAREN COLON .)
    FOR             reduce using rule 5 (statement -> PRINT LPAREN expr_list RPAREN COLON .)
    DEF             reduce using rule 5 (statement -> PRINT LPAREN expr_list RPAREN COLON .)
    LPAREN          reduce using rule 5 (statement -> PRINT LPAREN expr_list RPAREN COLON .)
    NUMBER          reduce using rule 5 (statement -> PRINT LPAREN expr_list RPAREN COLON .)
    LBRACKET        reduce using rule 5 (statement -> PRINT LPAREN expr_list RPAREN COLON .)
    $end            reduce using rule 5 (statement -> PRINT LPAREN expr_list RPAREN COLON .)
    BRACERIGHT      reduce using rule 5 (statement -> PRINT LPAREN expr_list RPAREN COLON .)


state 113

    (25) statement -> IF LPAREN expression RPAREN BRACELEFT . bloc BRACERIGHT
    (26) statement -> IF LPAREN expression RPAREN BRACELEFT . bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUAL expression COLON
    (5) statement -> . PRINT LPAREN expr_list RPAREN COLON
    (22) statement -> . NAME PLUSEQUAL expression COLON
    (23) statement -> . NAME MINUSEQUAL expression COLON
    (24) statement -> . NAME INCREMENT COLON
    (25) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (27) statement -> . WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (28) statement -> . FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (29) statement -> . DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (30) statement -> . NAME LPAREN RPAREN COLON
    (31) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (36) statement -> . NAME LPAREN arg_list RPAREN COLON
    (38) statement -> . DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (40) statement -> . NAME EQUAL NAME LPAREN RPAREN COLON
    (45) statement -> . expression DOT POP LPAREN expression RPAREN COLON
    (46) statement -> . expression DOT APPEND LPAREN expression RPAREN COLON
    (47) statement -> . expression DOT COUNT LPAREN expression RPAREN COLON
    (48) statement -> . expression DOT LENGTH LPAREN RPAREN COLON
    (49) statement -> . expression DOT SORT LPAREN RPAREN COLON
    (50) statement -> . expression DOT REVERSE LPAREN RPAREN COLON
    (51) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT
    (52) statement -> . NAME EQUAL NAME LPAREN arg_list RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    NAME            shift and go to state 4
    PRINT           shift and go to state 6
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    DEF             shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 5
    bloc                           shift and go to state 127
    statement                      shift and go to state 3
    array                          shift and go to state 13

state 114

    (27) statement -> WHILE LPAREN expression RPAREN BRACELEFT . bloc BRACERIGHT
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUAL expression COLON
    (5) statement -> . PRINT LPAREN expr_list RPAREN COLON
    (22) statement -> . NAME PLUSEQUAL expression COLON
    (23) statement -> . NAME MINUSEQUAL expression COLON
    (24) statement -> . NAME INCREMENT COLON
    (25) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (27) statement -> . WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (28) statement -> . FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (29) statement -> . DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (30) statement -> . NAME LPAREN RPAREN COLON
    (31) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (36) statement -> . NAME LPAREN arg_list RPAREN COLON
    (38) statement -> . DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (40) statement -> . NAME EQUAL NAME LPAREN RPAREN COLON
    (45) statement -> . expression DOT POP LPAREN expression RPAREN COLON
    (46) statement -> . expression DOT APPEND LPAREN expression RPAREN COLON
    (47) statement -> . expression DOT COUNT LPAREN expression RPAREN COLON
    (48) statement -> . expression DOT LENGTH LPAREN RPAREN COLON
    (49) statement -> . expression DOT SORT LPAREN RPAREN COLON
    (50) statement -> . expression DOT REVERSE LPAREN RPAREN COLON
    (51) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT
    (52) statement -> . NAME EQUAL NAME LPAREN arg_list RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    NAME            shift and go to state 4
    PRINT           shift and go to state 6
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    DEF             shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 5
    bloc                           shift and go to state 128
    statement                      shift and go to state 3
    array                          shift and go to state 13

state 115

    (28) statement -> FOR LPAREN NAME FROM expression . TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    TO              shift and go to state 129
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 116

    (29) statement -> DEF NAME LPAREN RPAREN BRACELEFT . bloc BRACERIGHT
    (38) statement -> DEF NAME LPAREN RPAREN BRACELEFT . return_statement BRACERIGHT
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (39) return_statement -> . RETURN expression COLON
    (4) statement -> . NAME EQUAL expression COLON
    (5) statement -> . PRINT LPAREN expr_list RPAREN COLON
    (22) statement -> . NAME PLUSEQUAL expression COLON
    (23) statement -> . NAME MINUSEQUAL expression COLON
    (24) statement -> . NAME INCREMENT COLON
    (25) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (27) statement -> . WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (28) statement -> . FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (29) statement -> . DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (30) statement -> . NAME LPAREN RPAREN COLON
    (31) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (36) statement -> . NAME LPAREN arg_list RPAREN COLON
    (38) statement -> . DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (40) statement -> . NAME EQUAL NAME LPAREN RPAREN COLON
    (45) statement -> . expression DOT POP LPAREN expression RPAREN COLON
    (46) statement -> . expression DOT APPEND LPAREN expression RPAREN COLON
    (47) statement -> . expression DOT COUNT LPAREN expression RPAREN COLON
    (48) statement -> . expression DOT LENGTH LPAREN RPAREN COLON
    (49) statement -> . expression DOT SORT LPAREN RPAREN COLON
    (50) statement -> . expression DOT REVERSE LPAREN RPAREN COLON
    (51) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT
    (52) statement -> . NAME EQUAL NAME LPAREN arg_list RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    RETURN          shift and go to state 132
    NAME            shift and go to state 4
    PRINT           shift and go to state 6
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    DEF             shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    LBRACKET        shift and go to state 14

    bloc                           shift and go to state 130
    return_statement               shift and go to state 131
    statement                      shift and go to state 3
    expression                     shift and go to state 5
    array                          shift and go to state 13

state 117

    (31) statement -> DEF NAME LPAREN param_list RPAREN . BRACELEFT bloc BRACERIGHT
    (51) statement -> DEF NAME LPAREN param_list RPAREN . BRACELEFT return_statement BRACERIGHT

    BRACELEFT       shift and go to state 133


state 118

    (32) param_list -> param_list COMMA . NAME

    NAME            shift and go to state 134


state 119

    (40) statement -> NAME EQUAL NAME LPAREN RPAREN COLON .

    NAME            reduce using rule 40 (statement -> NAME EQUAL NAME LPAREN RPAREN COLON .)
    PRINT           reduce using rule 40 (statement -> NAME EQUAL NAME LPAREN RPAREN COLON .)
    IF              reduce using rule 40 (statement -> NAME EQUAL NAME LPAREN RPAREN COLON .)
    WHILE           reduce using rule 40 (statement -> NAME EQUAL NAME LPAREN RPAREN COLON .)
    FOR             reduce using rule 40 (statement -> NAME EQUAL NAME LPAREN RPAREN COLON .)
    DEF             reduce using rule 40 (statement -> NAME EQUAL NAME LPAREN RPAREN COLON .)
    LPAREN          reduce using rule 40 (statement -> NAME EQUAL NAME LPAREN RPAREN COLON .)
    NUMBER          reduce using rule 40 (statement -> NAME EQUAL NAME LPAREN RPAREN COLON .)
    LBRACKET        reduce using rule 40 (statement -> NAME EQUAL NAME LPAREN RPAREN COLON .)
    $end            reduce using rule 40 (statement -> NAME EQUAL NAME LPAREN RPAREN COLON .)
    BRACERIGHT      reduce using rule 40 (statement -> NAME EQUAL NAME LPAREN RPAREN COLON .)


state 120

    (52) statement -> NAME EQUAL NAME LPAREN arg_list RPAREN . COLON

    COLON           shift and go to state 135


state 121

    (45) statement -> expression DOT POP LPAREN expression RPAREN . COLON

    COLON           shift and go to state 136


state 122

    (46) statement -> expression DOT APPEND LPAREN expression RPAREN . COLON

    COLON           shift and go to state 137


state 123

    (47) statement -> expression DOT COUNT LPAREN expression RPAREN . COLON

    COLON           shift and go to state 138


state 124

    (48) statement -> expression DOT LENGTH LPAREN RPAREN COLON .

    NAME            reduce using rule 48 (statement -> expression DOT LENGTH LPAREN RPAREN COLON .)
    PRINT           reduce using rule 48 (statement -> expression DOT LENGTH LPAREN RPAREN COLON .)
    IF              reduce using rule 48 (statement -> expression DOT LENGTH LPAREN RPAREN COLON .)
    WHILE           reduce using rule 48 (statement -> expression DOT LENGTH LPAREN RPAREN COLON .)
    FOR             reduce using rule 48 (statement -> expression DOT LENGTH LPAREN RPAREN COLON .)
    DEF             reduce using rule 48 (statement -> expression DOT LENGTH LPAREN RPAREN COLON .)
    LPAREN          reduce using rule 48 (statement -> expression DOT LENGTH LPAREN RPAREN COLON .)
    NUMBER          reduce using rule 48 (statement -> expression DOT LENGTH LPAREN RPAREN COLON .)
    LBRACKET        reduce using rule 48 (statement -> expression DOT LENGTH LPAREN RPAREN COLON .)
    $end            reduce using rule 48 (statement -> expression DOT LENGTH LPAREN RPAREN COLON .)
    BRACERIGHT      reduce using rule 48 (statement -> expression DOT LENGTH LPAREN RPAREN COLON .)


state 125

    (49) statement -> expression DOT SORT LPAREN RPAREN COLON .

    NAME            reduce using rule 49 (statement -> expression DOT SORT LPAREN RPAREN COLON .)
    PRINT           reduce using rule 49 (statement -> expression DOT SORT LPAREN RPAREN COLON .)
    IF              reduce using rule 49 (statement -> expression DOT SORT LPAREN RPAREN COLON .)
    WHILE           reduce using rule 49 (statement -> expression DOT SORT LPAREN RPAREN COLON .)
    FOR             reduce using rule 49 (statement -> expression DOT SORT LPAREN RPAREN COLON .)
    DEF             reduce using rule 49 (statement -> expression DOT SORT LPAREN RPAREN COLON .)
    LPAREN          reduce using rule 49 (statement -> expression DOT SORT LPAREN RPAREN COLON .)
    NUMBER          reduce using rule 49 (statement -> expression DOT SORT LPAREN RPAREN COLON .)
    LBRACKET        reduce using rule 49 (statement -> expression DOT SORT LPAREN RPAREN COLON .)
    $end            reduce using rule 49 (statement -> expression DOT SORT LPAREN RPAREN COLON .)
    BRACERIGHT      reduce using rule 49 (statement -> expression DOT SORT LPAREN RPAREN COLON .)


state 126

    (50) statement -> expression DOT REVERSE LPAREN RPAREN COLON .

    NAME            reduce using rule 50 (statement -> expression DOT REVERSE LPAREN RPAREN COLON .)
    PRINT           reduce using rule 50 (statement -> expression DOT REVERSE LPAREN RPAREN COLON .)
    IF              reduce using rule 50 (statement -> expression DOT REVERSE LPAREN RPAREN COLON .)
    WHILE           reduce using rule 50 (statement -> expression DOT REVERSE LPAREN RPAREN COLON .)
    FOR             reduce using rule 50 (statement -> expression DOT REVERSE LPAREN RPAREN COLON .)
    DEF             reduce using rule 50 (statement -> expression DOT REVERSE LPAREN RPAREN COLON .)
    LPAREN          reduce using rule 50 (statement -> expression DOT REVERSE LPAREN RPAREN COLON .)
    NUMBER          reduce using rule 50 (statement -> expression DOT REVERSE LPAREN RPAREN COLON .)
    LBRACKET        reduce using rule 50 (statement -> expression DOT REVERSE LPAREN RPAREN COLON .)
    $end            reduce using rule 50 (statement -> expression DOT REVERSE LPAREN RPAREN COLON .)
    BRACERIGHT      reduce using rule 50 (statement -> expression DOT REVERSE LPAREN RPAREN COLON .)


state 127

    (25) statement -> IF LPAREN expression RPAREN BRACELEFT bloc . BRACERIGHT
    (26) statement -> IF LPAREN expression RPAREN BRACELEFT bloc . BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUAL expression COLON
    (5) statement -> . PRINT LPAREN expr_list RPAREN COLON
    (22) statement -> . NAME PLUSEQUAL expression COLON
    (23) statement -> . NAME MINUSEQUAL expression COLON
    (24) statement -> . NAME INCREMENT COLON
    (25) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (27) statement -> . WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (28) statement -> . FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (29) statement -> . DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (30) statement -> . NAME LPAREN RPAREN COLON
    (31) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (36) statement -> . NAME LPAREN arg_list RPAREN COLON
    (38) statement -> . DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (40) statement -> . NAME EQUAL NAME LPAREN RPAREN COLON
    (45) statement -> . expression DOT POP LPAREN expression RPAREN COLON
    (46) statement -> . expression DOT APPEND LPAREN expression RPAREN COLON
    (47) statement -> . expression DOT COUNT LPAREN expression RPAREN COLON
    (48) statement -> . expression DOT LENGTH LPAREN RPAREN COLON
    (49) statement -> . expression DOT SORT LPAREN RPAREN COLON
    (50) statement -> . expression DOT REVERSE LPAREN RPAREN COLON
    (51) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT
    (52) statement -> . NAME EQUAL NAME LPAREN arg_list RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    BRACERIGHT      shift and go to state 139
    NAME            shift and go to state 4
    PRINT           shift and go to state 6
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    DEF             shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 5
    statement                      shift and go to state 15
    array                          shift and go to state 13

state 128

    (27) statement -> WHILE LPAREN expression RPAREN BRACELEFT bloc . BRACERIGHT
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUAL expression COLON
    (5) statement -> . PRINT LPAREN expr_list RPAREN COLON
    (22) statement -> . NAME PLUSEQUAL expression COLON
    (23) statement -> . NAME MINUSEQUAL expression COLON
    (24) statement -> . NAME INCREMENT COLON
    (25) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (27) statement -> . WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (28) statement -> . FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (29) statement -> . DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (30) statement -> . NAME LPAREN RPAREN COLON
    (31) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (36) statement -> . NAME LPAREN arg_list RPAREN COLON
    (38) statement -> . DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (40) statement -> . NAME EQUAL NAME LPAREN RPAREN COLON
    (45) statement -> . expression DOT POP LPAREN expression RPAREN COLON
    (46) statement -> . expression DOT APPEND LPAREN expression RPAREN COLON
    (47) statement -> . expression DOT COUNT LPAREN expression RPAREN COLON
    (48) statement -> . expression DOT LENGTH LPAREN RPAREN COLON
    (49) statement -> . expression DOT SORT LPAREN RPAREN COLON
    (50) statement -> . expression DOT REVERSE LPAREN RPAREN COLON
    (51) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT
    (52) statement -> . NAME EQUAL NAME LPAREN arg_list RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    BRACERIGHT      shift and go to state 140
    NAME            shift and go to state 4
    PRINT           shift and go to state 6
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    DEF             shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 5
    statement                      shift and go to state 15
    array                          shift and go to state 13

state 129

    (28) statement -> FOR LPAREN NAME FROM expression TO . expression RPAREN BRACELEFT bloc BRACERIGHT
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 141
    array                          shift and go to state 13

state 130

    (29) statement -> DEF NAME LPAREN RPAREN BRACELEFT bloc . BRACERIGHT
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUAL expression COLON
    (5) statement -> . PRINT LPAREN expr_list RPAREN COLON
    (22) statement -> . NAME PLUSEQUAL expression COLON
    (23) statement -> . NAME MINUSEQUAL expression COLON
    (24) statement -> . NAME INCREMENT COLON
    (25) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (27) statement -> . WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (28) statement -> . FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (29) statement -> . DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (30) statement -> . NAME LPAREN RPAREN COLON
    (31) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (36) statement -> . NAME LPAREN arg_list RPAREN COLON
    (38) statement -> . DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (40) statement -> . NAME EQUAL NAME LPAREN RPAREN COLON
    (45) statement -> . expression DOT POP LPAREN expression RPAREN COLON
    (46) statement -> . expression DOT APPEND LPAREN expression RPAREN COLON
    (47) statement -> . expression DOT COUNT LPAREN expression RPAREN COLON
    (48) statement -> . expression DOT LENGTH LPAREN RPAREN COLON
    (49) statement -> . expression DOT SORT LPAREN RPAREN COLON
    (50) statement -> . expression DOT REVERSE LPAREN RPAREN COLON
    (51) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT
    (52) statement -> . NAME EQUAL NAME LPAREN arg_list RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    BRACERIGHT      shift and go to state 142
    NAME            shift and go to state 4
    PRINT           shift and go to state 6
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    DEF             shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    LBRACKET        shift and go to state 14

    statement                      shift and go to state 15
    expression                     shift and go to state 5
    array                          shift and go to state 13

state 131

    (38) statement -> DEF NAME LPAREN RPAREN BRACELEFT return_statement . BRACERIGHT

    BRACERIGHT      shift and go to state 143


state 132

    (39) return_statement -> RETURN . expression COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    NAME            shift and go to state 37
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 144
    array                          shift and go to state 13

state 133

    (31) statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT . bloc BRACERIGHT
    (51) statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT . return_statement BRACERIGHT
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (39) return_statement -> . RETURN expression COLON
    (4) statement -> . NAME EQUAL expression COLON
    (5) statement -> . PRINT LPAREN expr_list RPAREN COLON
    (22) statement -> . NAME PLUSEQUAL expression COLON
    (23) statement -> . NAME MINUSEQUAL expression COLON
    (24) statement -> . NAME INCREMENT COLON
    (25) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (27) statement -> . WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (28) statement -> . FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (29) statement -> . DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (30) statement -> . NAME LPAREN RPAREN COLON
    (31) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (36) statement -> . NAME LPAREN arg_list RPAREN COLON
    (38) statement -> . DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (40) statement -> . NAME EQUAL NAME LPAREN RPAREN COLON
    (45) statement -> . expression DOT POP LPAREN expression RPAREN COLON
    (46) statement -> . expression DOT APPEND LPAREN expression RPAREN COLON
    (47) statement -> . expression DOT COUNT LPAREN expression RPAREN COLON
    (48) statement -> . expression DOT LENGTH LPAREN RPAREN COLON
    (49) statement -> . expression DOT SORT LPAREN RPAREN COLON
    (50) statement -> . expression DOT REVERSE LPAREN RPAREN COLON
    (51) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT
    (52) statement -> . NAME EQUAL NAME LPAREN arg_list RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    RETURN          shift and go to state 132
    NAME            shift and go to state 4
    PRINT           shift and go to state 6
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    DEF             shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    LBRACKET        shift and go to state 14

    bloc                           shift and go to state 145
    return_statement               shift and go to state 146
    statement                      shift and go to state 3
    expression                     shift and go to state 5
    array                          shift and go to state 13

state 134

    (32) param_list -> param_list COMMA NAME .

    RPAREN          reduce using rule 32 (param_list -> param_list COMMA NAME .)
    COMMA           reduce using rule 32 (param_list -> param_list COMMA NAME .)


state 135

    (52) statement -> NAME EQUAL NAME LPAREN arg_list RPAREN COLON .

    NAME            reduce using rule 52 (statement -> NAME EQUAL NAME LPAREN arg_list RPAREN COLON .)
    PRINT           reduce using rule 52 (statement -> NAME EQUAL NAME LPAREN arg_list RPAREN COLON .)
    IF              reduce using rule 52 (statement -> NAME EQUAL NAME LPAREN arg_list RPAREN COLON .)
    WHILE           reduce using rule 52 (statement -> NAME EQUAL NAME LPAREN arg_list RPAREN COLON .)
    FOR             reduce using rule 52 (statement -> NAME EQUAL NAME LPAREN arg_list RPAREN COLON .)
    DEF             reduce using rule 52 (statement -> NAME EQUAL NAME LPAREN arg_list RPAREN COLON .)
    LPAREN          reduce using rule 52 (statement -> NAME EQUAL NAME LPAREN arg_list RPAREN COLON .)
    NUMBER          reduce using rule 52 (statement -> NAME EQUAL NAME LPAREN arg_list RPAREN COLON .)
    LBRACKET        reduce using rule 52 (statement -> NAME EQUAL NAME LPAREN arg_list RPAREN COLON .)
    $end            reduce using rule 52 (statement -> NAME EQUAL NAME LPAREN arg_list RPAREN COLON .)
    BRACERIGHT      reduce using rule 52 (statement -> NAME EQUAL NAME LPAREN arg_list RPAREN COLON .)


state 136

    (45) statement -> expression DOT POP LPAREN expression RPAREN COLON .

    NAME            reduce using rule 45 (statement -> expression DOT POP LPAREN expression RPAREN COLON .)
    PRINT           reduce using rule 45 (statement -> expression DOT POP LPAREN expression RPAREN COLON .)
    IF              reduce using rule 45 (statement -> expression DOT POP LPAREN expression RPAREN COLON .)
    WHILE           reduce using rule 45 (statement -> expression DOT POP LPAREN expression RPAREN COLON .)
    FOR             reduce using rule 45 (statement -> expression DOT POP LPAREN expression RPAREN COLON .)
    DEF             reduce using rule 45 (statement -> expression DOT POP LPAREN expression RPAREN COLON .)
    LPAREN          reduce using rule 45 (statement -> expression DOT POP LPAREN expression RPAREN COLON .)
    NUMBER          reduce using rule 45 (statement -> expression DOT POP LPAREN expression RPAREN COLON .)
    LBRACKET        reduce using rule 45 (statement -> expression DOT POP LPAREN expression RPAREN COLON .)
    $end            reduce using rule 45 (statement -> expression DOT POP LPAREN expression RPAREN COLON .)
    BRACERIGHT      reduce using rule 45 (statement -> expression DOT POP LPAREN expression RPAREN COLON .)


state 137

    (46) statement -> expression DOT APPEND LPAREN expression RPAREN COLON .

    NAME            reduce using rule 46 (statement -> expression DOT APPEND LPAREN expression RPAREN COLON .)
    PRINT           reduce using rule 46 (statement -> expression DOT APPEND LPAREN expression RPAREN COLON .)
    IF              reduce using rule 46 (statement -> expression DOT APPEND LPAREN expression RPAREN COLON .)
    WHILE           reduce using rule 46 (statement -> expression DOT APPEND LPAREN expression RPAREN COLON .)
    FOR             reduce using rule 46 (statement -> expression DOT APPEND LPAREN expression RPAREN COLON .)
    DEF             reduce using rule 46 (statement -> expression DOT APPEND LPAREN expression RPAREN COLON .)
    LPAREN          reduce using rule 46 (statement -> expression DOT APPEND LPAREN expression RPAREN COLON .)
    NUMBER          reduce using rule 46 (statement -> expression DOT APPEND LPAREN expression RPAREN COLON .)
    LBRACKET        reduce using rule 46 (statement -> expression DOT APPEND LPAREN expression RPAREN COLON .)
    $end            reduce using rule 46 (statement -> expression DOT APPEND LPAREN expression RPAREN COLON .)
    BRACERIGHT      reduce using rule 46 (statement -> expression DOT APPEND LPAREN expression RPAREN COLON .)


state 138

    (47) statement -> expression DOT COUNT LPAREN expression RPAREN COLON .

    NAME            reduce using rule 47 (statement -> expression DOT COUNT LPAREN expression RPAREN COLON .)
    PRINT           reduce using rule 47 (statement -> expression DOT COUNT LPAREN expression RPAREN COLON .)
    IF              reduce using rule 47 (statement -> expression DOT COUNT LPAREN expression RPAREN COLON .)
    WHILE           reduce using rule 47 (statement -> expression DOT COUNT LPAREN expression RPAREN COLON .)
    FOR             reduce using rule 47 (statement -> expression DOT COUNT LPAREN expression RPAREN COLON .)
    DEF             reduce using rule 47 (statement -> expression DOT COUNT LPAREN expression RPAREN COLON .)
    LPAREN          reduce using rule 47 (statement -> expression DOT COUNT LPAREN expression RPAREN COLON .)
    NUMBER          reduce using rule 47 (statement -> expression DOT COUNT LPAREN expression RPAREN COLON .)
    LBRACKET        reduce using rule 47 (statement -> expression DOT COUNT LPAREN expression RPAREN COLON .)
    $end            reduce using rule 47 (statement -> expression DOT COUNT LPAREN expression RPAREN COLON .)
    BRACERIGHT      reduce using rule 47 (statement -> expression DOT COUNT LPAREN expression RPAREN COLON .)


state 139

    (25) statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .
    (26) statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT . ELSE BRACELEFT bloc BRACERIGHT

    NAME            reduce using rule 25 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    PRINT           reduce using rule 25 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    IF              reduce using rule 25 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    WHILE           reduce using rule 25 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    FOR             reduce using rule 25 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    DEF             reduce using rule 25 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    LPAREN          reduce using rule 25 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    NUMBER          reduce using rule 25 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    LBRACKET        reduce using rule 25 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    $end            reduce using rule 25 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    BRACERIGHT      reduce using rule 25 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    ELSE            shift and go to state 147


state 140

    (27) statement -> WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .

    NAME            reduce using rule 27 (statement -> WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    PRINT           reduce using rule 27 (statement -> WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    IF              reduce using rule 27 (statement -> WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    WHILE           reduce using rule 27 (statement -> WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    FOR             reduce using rule 27 (statement -> WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    DEF             reduce using rule 27 (statement -> WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    LPAREN          reduce using rule 27 (statement -> WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    NUMBER          reduce using rule 27 (statement -> WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    LBRACKET        reduce using rule 27 (statement -> WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    $end            reduce using rule 27 (statement -> WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)
    BRACERIGHT      reduce using rule 27 (statement -> WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT .)


state 141

    (28) statement -> FOR LPAREN NAME FROM expression TO expression . RPAREN BRACELEFT bloc BRACERIGHT
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    RPAREN          shift and go to state 148
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 142

    (29) statement -> DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT .

    NAME            reduce using rule 29 (statement -> DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT .)
    PRINT           reduce using rule 29 (statement -> DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT .)
    IF              reduce using rule 29 (statement -> DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT .)
    WHILE           reduce using rule 29 (statement -> DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT .)
    FOR             reduce using rule 29 (statement -> DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT .)
    DEF             reduce using rule 29 (statement -> DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT .)
    LPAREN          reduce using rule 29 (statement -> DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT .)
    NUMBER          reduce using rule 29 (statement -> DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT .)
    LBRACKET        reduce using rule 29 (statement -> DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT .)
    $end            reduce using rule 29 (statement -> DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT .)
    BRACERIGHT      reduce using rule 29 (statement -> DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT .)


state 143

    (38) statement -> DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT .

    NAME            reduce using rule 38 (statement -> DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT .)
    PRINT           reduce using rule 38 (statement -> DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT .)
    IF              reduce using rule 38 (statement -> DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT .)
    WHILE           reduce using rule 38 (statement -> DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT .)
    FOR             reduce using rule 38 (statement -> DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT .)
    DEF             reduce using rule 38 (statement -> DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT .)
    LPAREN          reduce using rule 38 (statement -> DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT .)
    NUMBER          reduce using rule 38 (statement -> DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT .)
    LBRACKET        reduce using rule 38 (statement -> DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT .)
    $end            reduce using rule 38 (statement -> DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT .)
    BRACERIGHT      reduce using rule 38 (statement -> DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT .)


state 144

    (39) return_statement -> RETURN expression . COLON
    (6) expression -> expression . PLUS expression
    (7) expression -> expression . MINUS expression
    (8) expression -> expression . TIMES expression
    (9) expression -> expression . OR expression
    (10) expression -> expression . AND expression
    (11) expression -> expression . EQUALS expression
    (12) expression -> expression . LOWER expression
    (13) expression -> expression . HIGHER expression
    (14) expression -> expression . HIGHEROREQUAL expression
    (15) expression -> expression . LOWEROREQUAL expression
    (16) expression -> expression . DIFFERENT expression
    (17) expression -> expression . DIVIDE expression
    (44) expression -> expression . LBRACKET expression RBRACKET

    COLON           shift and go to state 149
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    TIMES           shift and go to state 24
    OR              shift and go to state 25
    AND             shift and go to state 26
    EQUALS          shift and go to state 27
    LOWER           shift and go to state 28
    HIGHER          shift and go to state 29
    HIGHEROREQUAL   shift and go to state 30
    LOWEROREQUAL    shift and go to state 31
    DIFFERENT       shift and go to state 32
    DIVIDE          shift and go to state 33
    LBRACKET        shift and go to state 34


state 145

    (31) statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT bloc . BRACERIGHT
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUAL expression COLON
    (5) statement -> . PRINT LPAREN expr_list RPAREN COLON
    (22) statement -> . NAME PLUSEQUAL expression COLON
    (23) statement -> . NAME MINUSEQUAL expression COLON
    (24) statement -> . NAME INCREMENT COLON
    (25) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (27) statement -> . WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (28) statement -> . FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (29) statement -> . DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (30) statement -> . NAME LPAREN RPAREN COLON
    (31) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (36) statement -> . NAME LPAREN arg_list RPAREN COLON
    (38) statement -> . DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (40) statement -> . NAME EQUAL NAME LPAREN RPAREN COLON
    (45) statement -> . expression DOT POP LPAREN expression RPAREN COLON
    (46) statement -> . expression DOT APPEND LPAREN expression RPAREN COLON
    (47) statement -> . expression DOT COUNT LPAREN expression RPAREN COLON
    (48) statement -> . expression DOT LENGTH LPAREN RPAREN COLON
    (49) statement -> . expression DOT SORT LPAREN RPAREN COLON
    (50) statement -> . expression DOT REVERSE LPAREN RPAREN COLON
    (51) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT
    (52) statement -> . NAME EQUAL NAME LPAREN arg_list RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    BRACERIGHT      shift and go to state 150
    NAME            shift and go to state 4
    PRINT           shift and go to state 6
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    DEF             shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    LBRACKET        shift and go to state 14

    statement                      shift and go to state 15
    expression                     shift and go to state 5
    array                          shift and go to state 13

state 146

    (51) statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement . BRACERIGHT

    BRACERIGHT      shift and go to state 151


state 147

    (26) statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE . BRACELEFT bloc BRACERIGHT

    BRACELEFT       shift and go to state 152


state 148

    (28) statement -> FOR LPAREN NAME FROM expression TO expression RPAREN . BRACELEFT bloc BRACERIGHT

    BRACELEFT       shift and go to state 153


state 149

    (39) return_statement -> RETURN expression COLON .

    BRACERIGHT      reduce using rule 39 (return_statement -> RETURN expression COLON .)


state 150

    (31) statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT .

    NAME            reduce using rule 31 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT .)
    PRINT           reduce using rule 31 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT .)
    IF              reduce using rule 31 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT .)
    WHILE           reduce using rule 31 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT .)
    FOR             reduce using rule 31 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT .)
    DEF             reduce using rule 31 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT .)
    LPAREN          reduce using rule 31 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT .)
    NUMBER          reduce using rule 31 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT .)
    LBRACKET        reduce using rule 31 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT .)
    $end            reduce using rule 31 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT .)
    BRACERIGHT      reduce using rule 31 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT .)


state 151

    (51) statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT .

    NAME            reduce using rule 51 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT .)
    PRINT           reduce using rule 51 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT .)
    IF              reduce using rule 51 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT .)
    WHILE           reduce using rule 51 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT .)
    FOR             reduce using rule 51 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT .)
    DEF             reduce using rule 51 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT .)
    LPAREN          reduce using rule 51 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT .)
    NUMBER          reduce using rule 51 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT .)
    LBRACKET        reduce using rule 51 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT .)
    $end            reduce using rule 51 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT .)
    BRACERIGHT      reduce using rule 51 (statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT .)


state 152

    (26) statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT . bloc BRACERIGHT
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUAL expression COLON
    (5) statement -> . PRINT LPAREN expr_list RPAREN COLON
    (22) statement -> . NAME PLUSEQUAL expression COLON
    (23) statement -> . NAME MINUSEQUAL expression COLON
    (24) statement -> . NAME INCREMENT COLON
    (25) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (27) statement -> . WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (28) statement -> . FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (29) statement -> . DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (30) statement -> . NAME LPAREN RPAREN COLON
    (31) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (36) statement -> . NAME LPAREN arg_list RPAREN COLON
    (38) statement -> . DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (40) statement -> . NAME EQUAL NAME LPAREN RPAREN COLON
    (45) statement -> . expression DOT POP LPAREN expression RPAREN COLON
    (46) statement -> . expression DOT APPEND LPAREN expression RPAREN COLON
    (47) statement -> . expression DOT COUNT LPAREN expression RPAREN COLON
    (48) statement -> . expression DOT LENGTH LPAREN RPAREN COLON
    (49) statement -> . expression DOT SORT LPAREN RPAREN COLON
    (50) statement -> . expression DOT REVERSE LPAREN RPAREN COLON
    (51) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT
    (52) statement -> . NAME EQUAL NAME LPAREN arg_list RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    NAME            shift and go to state 4
    PRINT           shift and go to state 6
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    DEF             shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 5
    bloc                           shift and go to state 154
    statement                      shift and go to state 3
    array                          shift and go to state 13

state 153

    (28) statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT . bloc BRACERIGHT
    (2) bloc -> . bloc statement
    (3) bloc -> . statement
    (4) statement -> . NAME EQUAL expression COLON
    (5) statement -> . PRINT LPAREN expr_list RPAREN COLON
    (22) statement -> . NAME PLUSEQUAL expression COLON
    (23) statement -> . NAME MINUSEQUAL expression COLON
    (24) statement -> . NAME INCREMENT COLON
    (25) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (27) statement -> . WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (28) statement -> . FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (29) statement -> . DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (30) statement -> . NAME LPAREN RPAREN COLON
    (31) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (36) statement -> . NAME LPAREN arg_list RPAREN COLON
    (38) statement -> . DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (40) statement -> . NAME EQUAL NAME LPAREN RPAREN COLON
    (45) statement -> . expression DOT POP LPAREN expression RPAREN COLON
    (46) statement -> . expression DOT APPEND LPAREN expression RPAREN COLON
    (47) statement -> . expression DOT COUNT LPAREN expression RPAREN COLON
    (48) statement -> . expression DOT LENGTH LPAREN RPAREN COLON
    (49) statement -> . expression DOT SORT LPAREN RPAREN COLON
    (50) statement -> . expression DOT REVERSE LPAREN RPAREN COLON
    (51) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT
    (52) statement -> . NAME EQUAL NAME LPAREN arg_list RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    NAME            shift and go to state 4
    PRINT           shift and go to state 6
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    DEF             shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 5
    bloc                           shift and go to state 155
    statement                      shift and go to state 3
    array                          shift and go to state 13

state 154

    (26) statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc . BRACERIGHT
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUAL expression COLON
    (5) statement -> . PRINT LPAREN expr_list RPAREN COLON
    (22) statement -> . NAME PLUSEQUAL expression COLON
    (23) statement -> . NAME MINUSEQUAL expression COLON
    (24) statement -> . NAME INCREMENT COLON
    (25) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (27) statement -> . WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (28) statement -> . FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (29) statement -> . DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (30) statement -> . NAME LPAREN RPAREN COLON
    (31) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (36) statement -> . NAME LPAREN arg_list RPAREN COLON
    (38) statement -> . DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (40) statement -> . NAME EQUAL NAME LPAREN RPAREN COLON
    (45) statement -> . expression DOT POP LPAREN expression RPAREN COLON
    (46) statement -> . expression DOT APPEND LPAREN expression RPAREN COLON
    (47) statement -> . expression DOT COUNT LPAREN expression RPAREN COLON
    (48) statement -> . expression DOT LENGTH LPAREN RPAREN COLON
    (49) statement -> . expression DOT SORT LPAREN RPAREN COLON
    (50) statement -> . expression DOT REVERSE LPAREN RPAREN COLON
    (51) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT
    (52) statement -> . NAME EQUAL NAME LPAREN arg_list RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    BRACERIGHT      shift and go to state 156
    NAME            shift and go to state 4
    PRINT           shift and go to state 6
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    DEF             shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 5
    statement                      shift and go to state 15
    array                          shift and go to state 13

state 155

    (28) statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc . BRACERIGHT
    (2) bloc -> bloc . statement
    (4) statement -> . NAME EQUAL expression COLON
    (5) statement -> . PRINT LPAREN expr_list RPAREN COLON
    (22) statement -> . NAME PLUSEQUAL expression COLON
    (23) statement -> . NAME MINUSEQUAL expression COLON
    (24) statement -> . NAME INCREMENT COLON
    (25) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (26) statement -> . IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT
    (27) statement -> . WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT
    (28) statement -> . FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT
    (29) statement -> . DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT
    (30) statement -> . NAME LPAREN RPAREN COLON
    (31) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT
    (36) statement -> . NAME LPAREN arg_list RPAREN COLON
    (38) statement -> . DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT
    (40) statement -> . NAME EQUAL NAME LPAREN RPAREN COLON
    (45) statement -> . expression DOT POP LPAREN expression RPAREN COLON
    (46) statement -> . expression DOT APPEND LPAREN expression RPAREN COLON
    (47) statement -> . expression DOT COUNT LPAREN expression RPAREN COLON
    (48) statement -> . expression DOT LENGTH LPAREN RPAREN COLON
    (49) statement -> . expression DOT SORT LPAREN RPAREN COLON
    (50) statement -> . expression DOT REVERSE LPAREN RPAREN COLON
    (51) statement -> . DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT
    (52) statement -> . NAME EQUAL NAME LPAREN arg_list RPAREN COLON
    (6) expression -> . expression PLUS expression
    (7) expression -> . expression MINUS expression
    (8) expression -> . expression TIMES expression
    (9) expression -> . expression OR expression
    (10) expression -> . expression AND expression
    (11) expression -> . expression EQUALS expression
    (12) expression -> . expression LOWER expression
    (13) expression -> . expression HIGHER expression
    (14) expression -> . expression HIGHEROREQUAL expression
    (15) expression -> . expression LOWEROREQUAL expression
    (16) expression -> . expression DIFFERENT expression
    (17) expression -> . expression DIVIDE expression
    (18) expression -> . LPAREN expression RPAREN
    (19) expression -> . NUMBER
    (20) expression -> . NAME
    (21) expression -> . array
    (44) expression -> . expression LBRACKET expression RBRACKET
    (41) array -> . LBRACKET RBRACKET
    (42) array -> . LBRACKET expr_list RBRACKET

    BRACERIGHT      shift and go to state 157
    NAME            shift and go to state 4
    PRINT           shift and go to state 6
    IF              shift and go to state 8
    WHILE           shift and go to state 9
    FOR             shift and go to state 10
    DEF             shift and go to state 11
    LPAREN          shift and go to state 7
    NUMBER          shift and go to state 12
    LBRACKET        shift and go to state 14

    expression                     shift and go to state 5
    statement                      shift and go to state 15
    array                          shift and go to state 13

state 156

    (26) statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT .

    NAME            reduce using rule 26 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT .)
    PRINT           reduce using rule 26 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT .)
    IF              reduce using rule 26 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT .)
    WHILE           reduce using rule 26 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT .)
    FOR             reduce using rule 26 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT .)
    DEF             reduce using rule 26 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT .)
    LPAREN          reduce using rule 26 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT .)
    NUMBER          reduce using rule 26 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT .)
    LBRACKET        reduce using rule 26 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT .)
    $end            reduce using rule 26 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT .)
    BRACERIGHT      reduce using rule 26 (statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT .)


state 157

    (28) statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT .

    NAME            reduce using rule 28 (statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT .)
    PRINT           reduce using rule 28 (statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT .)
    IF              reduce using rule 28 (statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT .)
    WHILE           reduce using rule 28 (statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT .)
    FOR             reduce using rule 28 (statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT .)
    DEF             reduce using rule 28 (statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT .)
    LPAREN          reduce using rule 28 (statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT .)
    NUMBER          reduce using rule 28 (statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT .)
    LBRACKET        reduce using rule 28 (statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT .)
    $end            reduce using rule 28 (statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT .)
    BRACERIGHT      reduce using rule 28 (statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 59 resolved as shift
WARNING: shift/reduce conflict for OR in state 59 resolved as shift
WARNING: shift/reduce conflict for AND in state 59 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 59 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 59 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 59 resolved as shift
WARNING: shift/reduce conflict for HIGHEROREQUAL in state 59 resolved as shift
WARNING: shift/reduce conflict for LOWEROREQUAL in state 59 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 59 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 59 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 59 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 60 resolved as shift
WARNING: shift/reduce conflict for OR in state 60 resolved as shift
WARNING: shift/reduce conflict for AND in state 60 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 60 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 60 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 60 resolved as shift
WARNING: shift/reduce conflict for HIGHEROREQUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for LOWEROREQUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 60 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 60 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 61 resolved as shift
WARNING: shift/reduce conflict for OR in state 61 resolved as shift
WARNING: shift/reduce conflict for AND in state 61 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 61 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 61 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 61 resolved as shift
WARNING: shift/reduce conflict for HIGHEROREQUAL in state 61 resolved as shift
WARNING: shift/reduce conflict for LOWEROREQUAL in state 61 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 61 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 61 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for OR in state 62 resolved as shift
WARNING: shift/reduce conflict for AND in state 62 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 62 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 62 resolved as shift
WARNING: shift/reduce conflict for HIGHEROREQUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for LOWEROREQUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 63 resolved as shift
WARNING: shift/reduce conflict for OR in state 63 resolved as shift
WARNING: shift/reduce conflict for AND in state 63 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 63 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 63 resolved as shift
WARNING: shift/reduce conflict for HIGHEROREQUAL in state 63 resolved as shift
WARNING: shift/reduce conflict for LOWEROREQUAL in state 63 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 64 resolved as shift
WARNING: shift/reduce conflict for AND in state 64 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 64 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 64 resolved as shift
WARNING: shift/reduce conflict for HIGHEROREQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for LOWEROREQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for OR in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 65 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 65 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 65 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 65 resolved as shift
WARNING: shift/reduce conflict for HIGHEROREQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for LOWEROREQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 65 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 66 resolved as shift
WARNING: shift/reduce conflict for OR in state 66 resolved as shift
WARNING: shift/reduce conflict for AND in state 66 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 66 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 66 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 66 resolved as shift
WARNING: shift/reduce conflict for HIGHEROREQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for LOWEROREQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 66 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 66 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 67 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 67 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 67 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 67 resolved as shift
WARNING: shift/reduce conflict for HIGHEROREQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for LOWEROREQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 67 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 68 resolved as shift
WARNING: shift/reduce conflict for OR in state 68 resolved as shift
WARNING: shift/reduce conflict for AND in state 68 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 68 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 68 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 68 resolved as shift
WARNING: shift/reduce conflict for HIGHEROREQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for LOWEROREQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 68 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 68 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 69 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 69 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 69 resolved as shift
WARNING: shift/reduce conflict for HIGHEROREQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for LOWEROREQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 70 resolved as shift
WARNING: shift/reduce conflict for LOWER in state 70 resolved as shift
WARNING: shift/reduce conflict for HIGHER in state 70 resolved as shift
WARNING: shift/reduce conflict for HIGHEROREQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for LOWEROREQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for DIFFERENT in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 70 resolved as shift
