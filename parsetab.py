
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND APPEND BRACELEFT BRACERIGHT COLON COMMA COUNT DEF DIFFERENT DIVIDE DOT ELSE EQUAL EQUALS FOR FROM HIGHER HIGHEROREQUAL IF INCREMENT LBRACKET LENGTH LOWER LOWEROREQUAL LPAREN MINUS MINUSEQUAL NAME NUMBER OR PLUS PLUSEQUAL POP PRINT RBRACKET RETURN REVERSE RPAREN SORT TIMES TO WHILE start : blocbloc : bloc statement\n            | statement statement : NAME EQUAL expression COLONstatement : PRINT LPAREN expr_list RPAREN COLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression OR expression\n                  | expression AND expression\n                  | expression EQUALS expression\n                  | expression LOWER expression\n                  | expression HIGHER expression\n                  | expression HIGHEROREQUAL expression\n                  | expression LOWEROREQUAL expression\n                  | expression DIFFERENT expression\n                  | expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAMEexpression : arraystatement : NAME PLUSEQUAL expression COLONstatement : NAME MINUSEQUAL expression COLONstatement : NAME INCREMENT COLONstatement : IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHTstatement : IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHTstatement : WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHTstatement : FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHTstatement : DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHTstatement : NAME LPAREN RPAREN COLONstatement : DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHTparam_list : param_list COMMA NAMEparam_list : NAMEarg_list : arg_list COMMA expressionarg_list : expressionstatement : NAME LPAREN arg_list RPAREN COLONexpr_list : expressionstatement : DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHTreturn_statement : RETURN expression COLONstatement : NAME EQUAL NAME LPAREN RPAREN COLONarray : LBRACKET RBRACKETarray : LBRACKET expr_list RBRACKETexpr_list : expr_list COMMA expressionexpression : expression LBRACKET expression RBRACKETstatement : expression DOT POP LPAREN expression RPAREN COLONstatement : expression DOT APPEND LPAREN expression RPAREN COLONstatement : expression DOT COUNT LPAREN expression RPAREN COLONstatement : expression DOT LENGTH LPAREN RPAREN COLONstatement : expression DOT SORT LPAREN RPAREN COLONstatement : expression DOT REVERSE LPAREN RPAREN COLONstatement : DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHTstatement : NAME EQUAL NAME LPAREN arg_list RPAREN COLON'
    
_lr_action_items = {'NAME':([0,2,3,7,11,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,40,49,77,79,80,81,82,83,84,86,87,88,89,97,104,112,113,114,116,118,119,124,125,126,127,128,129,130,132,133,135,136,137,138,139,140,142,143,145,150,151,152,153,154,155,156,157,],[4,4,-3,37,41,37,-2,45,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,76,-24,98,37,37,-4,-22,-23,-30,37,37,37,37,37,-36,-5,4,4,4,134,-40,-48,-49,-50,4,4,37,4,37,4,-52,-45,-46,-47,-25,-27,-29,-38,4,-31,-51,4,4,4,4,-26,-28,]),'PRINT':([0,2,3,15,49,81,82,83,84,104,112,113,114,116,119,124,125,126,127,128,130,133,135,136,137,138,139,140,142,143,145,150,151,152,153,154,155,156,157,],[6,6,-3,-2,-24,-4,-22,-23,-30,-36,-5,6,6,6,-40,-48,-49,-50,6,6,6,6,-52,-45,-46,-47,-25,-27,-29,-38,6,-31,-51,6,6,6,6,-26,-28,]),'IF':([0,2,3,15,49,81,82,83,84,104,112,113,114,116,119,124,125,126,127,128,130,133,135,136,137,138,139,140,142,143,145,150,151,152,153,154,155,156,157,],[8,8,-3,-2,-24,-4,-22,-23,-30,-36,-5,8,8,8,-40,-48,-49,-50,8,8,8,8,-52,-45,-46,-47,-25,-27,-29,-38,8,-31,-51,8,8,8,8,-26,-28,]),'WHILE':([0,2,3,15,49,81,82,83,84,104,112,113,114,116,119,124,125,126,127,128,130,133,135,136,137,138,139,140,142,143,145,150,151,152,153,154,155,156,157,],[9,9,-3,-2,-24,-4,-22,-23,-30,-36,-5,9,9,9,-40,-48,-49,-50,9,9,9,9,-52,-45,-46,-47,-25,-27,-29,-38,9,-31,-51,9,9,9,9,-26,-28,]),'FOR':([0,2,3,15,49,81,82,83,84,104,112,113,114,116,119,124,125,126,127,128,130,133,135,136,137,138,139,140,142,143,145,150,151,152,153,154,155,156,157,],[10,10,-3,-2,-24,-4,-22,-23,-30,-36,-5,10,10,10,-40,-48,-49,-50,10,10,10,10,-52,-45,-46,-47,-25,-27,-29,-38,10,-31,-51,10,10,10,10,-26,-28,]),'DEF':([0,2,3,15,49,81,82,83,84,104,112,113,114,116,119,124,125,126,127,128,130,133,135,136,137,138,139,140,142,143,145,150,151,152,153,154,155,156,157,],[11,11,-3,-2,-24,-4,-22,-23,-30,-36,-5,11,11,11,-40,-48,-49,-50,11,11,11,11,-52,-45,-46,-47,-25,-27,-29,-38,11,-31,-51,11,11,11,11,-26,-28,]),'LPAREN':([0,2,3,4,6,7,8,9,10,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,41,45,49,53,54,55,56,57,58,79,80,81,82,83,84,86,87,88,89,97,104,112,113,114,116,119,124,125,126,127,128,129,130,132,133,135,136,137,138,139,140,142,143,145,150,151,152,153,154,155,156,157,],[7,7,-3,20,35,7,38,39,40,7,-2,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,77,80,-24,87,88,89,90,91,92,7,7,-4,-22,-23,-30,7,7,7,7,7,-36,-5,7,7,7,-40,-48,-49,-50,7,7,7,7,7,7,-52,-45,-46,-47,-25,-27,-29,-38,7,-31,-51,7,7,7,7,-26,-28,]),'NUMBER':([0,2,3,7,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,49,79,80,81,82,83,84,86,87,88,89,97,104,112,113,114,116,119,124,125,126,127,128,129,130,132,133,135,136,137,138,139,140,142,143,145,150,151,152,153,154,155,156,157,],[12,12,-3,12,12,-2,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-24,12,12,-4,-22,-23,-30,12,12,12,12,12,-36,-5,12,12,12,-40,-48,-49,-50,12,12,12,12,12,12,-52,-45,-46,-47,-25,-27,-29,-38,12,-31,-51,12,12,12,12,-26,-28,]),'LBRACKET':([0,2,3,4,5,7,12,13,14,15,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42,44,45,46,47,48,49,52,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,79,80,81,82,83,84,86,87,88,89,93,97,101,104,105,106,107,108,112,113,114,115,116,119,124,125,126,127,128,129,130,132,133,135,136,137,138,139,140,141,142,143,144,145,150,151,152,153,154,155,156,157,],[14,14,-3,-20,34,14,-19,-21,14,-2,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,34,-20,14,14,-41,34,-20,34,34,34,-24,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-18,34,34,-42,14,14,-4,-22,-23,-30,14,14,14,14,-44,14,34,-36,34,34,34,34,-5,14,14,34,14,-40,-48,-49,-50,14,14,14,14,14,14,-52,-45,-46,-47,-25,-27,34,-29,-38,34,14,-31,-51,14,14,14,14,-26,-28,]),'$end':([1,2,3,15,49,81,82,83,84,104,112,119,124,125,126,135,136,137,138,139,140,142,143,150,151,156,157,],[0,-1,-3,-2,-24,-4,-22,-23,-30,-36,-5,-40,-48,-49,-50,-52,-45,-46,-47,-25,-27,-29,-38,-31,-51,-26,-28,]),'BRACERIGHT':([3,15,49,81,82,83,84,104,112,119,124,125,126,127,128,130,131,135,136,137,138,139,140,142,143,145,146,149,150,151,154,155,156,157,],[-3,-2,-24,-4,-22,-23,-30,-36,-5,-40,-48,-49,-50,139,140,142,143,-52,-45,-46,-47,-25,-27,-29,-38,150,151,-39,-31,-51,156,157,-26,-28,]),'EQUAL':([4,],[16,]),'PLUSEQUAL':([4,],[17,]),'MINUSEQUAL':([4,],[18,]),'INCREMENT':([4,],[19,]),'DOT':([4,5,12,13,37,42,59,60,61,62,63,64,65,66,67,68,69,70,73,78,93,],[-20,21,-19,-21,-20,-41,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-42,-44,]),'PLUS':([4,5,12,13,36,37,42,44,45,46,47,48,52,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,93,101,105,106,107,108,115,141,144,],[-20,22,-19,-21,22,-20,-41,22,-20,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-18,22,22,-42,-44,22,22,22,22,22,22,22,22,]),'MINUS':([4,5,12,13,36,37,42,44,45,46,47,48,52,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,93,101,105,106,107,108,115,141,144,],[-20,23,-19,-21,23,-20,-41,23,-20,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-18,23,23,-42,-44,23,23,23,23,23,23,23,23,]),'TIMES':([4,5,12,13,36,37,42,44,45,46,47,48,52,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,93,101,105,106,107,108,115,141,144,],[-20,24,-19,-21,24,-20,-41,24,-20,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-18,24,24,-42,-44,24,24,24,24,24,24,24,24,]),'OR':([4,5,12,13,36,37,42,44,45,46,47,48,52,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,93,101,105,106,107,108,115,141,144,],[-20,25,-19,-21,25,-20,-41,25,-20,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-18,25,25,-42,-44,25,25,25,25,25,25,25,25,]),'AND':([4,5,12,13,36,37,42,44,45,46,47,48,52,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,93,101,105,106,107,108,115,141,144,],[-20,26,-19,-21,26,-20,-41,26,-20,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-18,26,26,-42,-44,26,26,26,26,26,26,26,26,]),'EQUALS':([4,5,12,13,36,37,42,44,45,46,47,48,52,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,93,101,105,106,107,108,115,141,144,],[-20,27,-19,-21,27,-20,-41,27,-20,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-18,27,27,-42,-44,27,27,27,27,27,27,27,27,]),'LOWER':([4,5,12,13,36,37,42,44,45,46,47,48,52,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,93,101,105,106,107,108,115,141,144,],[-20,28,-19,-21,28,-20,-41,28,-20,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-18,28,28,-42,-44,28,28,28,28,28,28,28,28,]),'HIGHER':([4,5,12,13,36,37,42,44,45,46,47,48,52,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,93,101,105,106,107,108,115,141,144,],[-20,29,-19,-21,29,-20,-41,29,-20,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-18,29,29,-42,-44,29,29,29,29,29,29,29,29,]),'HIGHEROREQUAL':([4,5,12,13,36,37,42,44,45,46,47,48,52,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,93,101,105,106,107,108,115,141,144,],[-20,30,-19,-21,30,-20,-41,30,-20,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-18,30,30,-42,-44,30,30,30,30,30,30,30,30,]),'LOWEROREQUAL':([4,5,12,13,36,37,42,44,45,46,47,48,52,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,93,101,105,106,107,108,115,141,144,],[-20,31,-19,-21,31,-20,-41,31,-20,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-18,31,31,-42,-44,31,31,31,31,31,31,31,31,]),'DIFFERENT':([4,5,12,13,36,37,42,44,45,46,47,48,52,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,93,101,105,106,107,108,115,141,144,],[-20,32,-19,-21,32,-20,-41,32,-20,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-18,32,32,-42,-44,32,32,32,32,32,32,32,32,]),'DIVIDE':([4,5,12,13,36,37,42,44,45,46,47,48,52,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,93,101,105,106,107,108,115,141,144,],[-20,33,-19,-21,33,-20,-41,33,-20,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-18,33,33,-42,-44,33,33,33,33,33,33,33,33,]),'RPAREN':([12,13,20,36,37,42,44,51,52,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,77,78,80,90,91,92,93,98,100,101,103,105,106,107,108,134,141,],[-19,-21,50,73,-20,-41,-37,85,-35,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,94,-18,95,96,99,-42,102,109,110,111,-44,-33,117,-43,120,-34,121,122,123,-32,148,]),'RBRACKET':([12,13,14,37,42,43,44,59,60,61,62,63,64,65,66,67,68,69,70,71,73,78,93,101,],[-19,-21,42,-20,-41,78,-37,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,93,-18,-42,-44,-43,]),'COMMA':([12,13,37,42,43,44,51,52,59,60,61,62,63,64,65,66,67,68,69,70,72,73,78,93,98,100,101,103,105,134,],[-19,-21,-20,-41,79,-37,86,-35,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,79,-18,-42,-44,-33,118,-43,86,-34,-32,]),'COLON':([12,13,19,37,42,45,46,47,48,50,59,60,61,62,63,64,65,66,67,68,69,70,73,78,85,93,94,102,109,110,111,120,121,122,123,144,],[-19,-21,49,-20,-41,-20,81,82,83,84,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-42,104,-44,112,119,124,125,126,135,136,137,138,149,]),'TO':([12,13,37,42,59,60,61,62,63,64,65,66,67,68,69,70,73,78,93,115,],[-19,-21,-20,-41,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-42,-44,129,]),'POP':([21,],[53,]),'APPEND':([21,],[54,]),'COUNT':([21,],[55,]),'LENGTH':([21,],[56,]),'SORT':([21,],[57,]),'REVERSE':([21,],[58,]),'FROM':([76,],[97,]),'BRACELEFT':([95,96,99,117,147,148,],[113,114,116,133,152,153,]),'RETURN':([116,133,],[132,132,]),'ELSE':([139,],[147,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,113,114,116,133,152,153,],[2,127,128,130,145,154,155,]),'statement':([0,2,113,114,116,127,128,130,133,145,152,153,154,155,],[3,15,3,3,3,15,15,15,3,15,3,3,15,15,]),'expression':([0,2,7,14,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,79,80,86,87,88,89,97,113,114,116,127,128,129,130,132,133,145,152,153,154,155,],[5,5,36,44,46,47,48,52,59,60,61,62,63,64,65,66,67,68,69,70,71,44,74,75,101,52,105,106,107,108,115,5,5,5,5,5,141,5,144,5,5,5,5,5,5,]),'array':([0,2,7,14,16,17,18,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,79,80,86,87,88,89,97,113,114,116,127,128,129,130,132,133,145,152,153,154,155,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'expr_list':([14,35,],[43,72,]),'arg_list':([20,80,],[51,103,]),'param_list':([77,],[100,]),'return_statement':([116,133,],[131,146,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> bloc','start',1,'p_start','Esengo.py',87),
  ('bloc -> bloc statement','bloc',2,'p_line','Esengo.py',292),
  ('bloc -> statement','bloc',1,'p_line','Esengo.py',293),
  ('statement -> NAME EQUAL expression COLON','statement',4,'p_statement_assign','Esengo.py',300),
  ('statement -> PRINT LPAREN expr_list RPAREN COLON','statement',5,'p_statement_print','Esengo.py',305),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','Esengo.py',310),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','Esengo.py',311),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','Esengo.py',312),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','Esengo.py',313),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','Esengo.py',314),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop','Esengo.py',315),
  ('expression -> expression LOWER expression','expression',3,'p_expression_binop','Esengo.py',316),
  ('expression -> expression HIGHER expression','expression',3,'p_expression_binop','Esengo.py',317),
  ('expression -> expression HIGHEROREQUAL expression','expression',3,'p_expression_binop','Esengo.py',318),
  ('expression -> expression LOWEROREQUAL expression','expression',3,'p_expression_binop','Esengo.py',319),
  ('expression -> expression DIFFERENT expression','expression',3,'p_expression_binop','Esengo.py',320),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','Esengo.py',321),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','Esengo.py',327),
  ('expression -> NUMBER','expression',1,'p_expression_number','Esengo.py',331),
  ('expression -> NAME','expression',1,'p_expression_name','Esengo.py',335),
  ('expression -> array','expression',1,'p_expression','Esengo.py',339),
  ('statement -> NAME PLUSEQUAL expression COLON','statement',4,'p_statement_assign_plus_equal','Esengo.py',343),
  ('statement -> NAME MINUSEQUAL expression COLON','statement',4,'p_statement_assign_minus_equal','Esengo.py',347),
  ('statement -> NAME INCREMENT COLON','statement',3,'p_statement_assign_increment','Esengo.py',351),
  ('statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT','statement',7,'p_statement_if','Esengo.py',356),
  ('statement -> IF LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT ELSE BRACELEFT bloc BRACERIGHT','statement',11,'p_statement_if_else','Esengo.py',360),
  ('statement -> WHILE LPAREN expression RPAREN BRACELEFT bloc BRACERIGHT','statement',7,'p_statement_while','Esengo.py',364),
  ('statement -> FOR LPAREN NAME FROM expression TO expression RPAREN BRACELEFT bloc BRACERIGHT','statement',11,'p_statement_for','Esengo.py',368),
  ('statement -> DEF NAME LPAREN RPAREN BRACELEFT bloc BRACERIGHT','statement',7,'p_statement_def_no_args','Esengo.py',372),
  ('statement -> NAME LPAREN RPAREN COLON','statement',4,'p_call_function','Esengo.py',376),
  ('statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT bloc BRACERIGHT','statement',8,'p_statement_def_args','Esengo.py',380),
  ('param_list -> param_list COMMA NAME','param_list',3,'p_param_list_more','Esengo.py',384),
  ('param_list -> NAME','param_list',1,'p_param_list_single','Esengo.py',388),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list_more','Esengo.py',392),
  ('arg_list -> expression','arg_list',1,'p_arg_list_single','Esengo.py',396),
  ('statement -> NAME LPAREN arg_list RPAREN COLON','statement',5,'p_call_function_with_args','Esengo.py',400),
  ('expr_list -> expression','expr_list',1,'p_expr_list_single','Esengo.py',404),
  ('statement -> DEF NAME LPAREN RPAREN BRACELEFT return_statement BRACERIGHT','statement',7,'p_statement_def_return','Esengo.py',408),
  ('return_statement -> RETURN expression COLON','return_statement',3,'p_return_statement','Esengo.py',412),
  ('statement -> NAME EQUAL NAME LPAREN RPAREN COLON','statement',6,'p_call_function_and_assign','Esengo.py',416),
  ('array -> LBRACKET RBRACKET','array',2,'p_array_empty','Esengo.py',420),
  ('array -> LBRACKET expr_list RBRACKET','array',3,'p_array_nonempty','Esengo.py',424),
  ('expr_list -> expr_list COMMA expression','expr_list',3,'p_expr_list_multiple','Esengo.py',428),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression_array_index','Esengo.py',433),
  ('statement -> expression DOT POP LPAREN expression RPAREN COLON','statement',7,'p_statement_array_pop','Esengo.py',437),
  ('statement -> expression DOT APPEND LPAREN expression RPAREN COLON','statement',7,'p_statement_array_append','Esengo.py',441),
  ('statement -> expression DOT COUNT LPAREN expression RPAREN COLON','statement',7,'p_statement_array_count','Esengo.py',445),
  ('statement -> expression DOT LENGTH LPAREN RPAREN COLON','statement',6,'p_statement_array_length','Esengo.py',449),
  ('statement -> expression DOT SORT LPAREN RPAREN COLON','statement',6,'p_statement_array_sort','Esengo.py',453),
  ('statement -> expression DOT REVERSE LPAREN RPAREN COLON','statement',6,'p_statement_array_reverse','Esengo.py',457),
  ('statement -> DEF NAME LPAREN param_list RPAREN BRACELEFT return_statement BRACERIGHT','statement',8,'p_statement_def_return_with_params','Esengo.py',461),
  ('statement -> NAME EQUAL NAME LPAREN arg_list RPAREN COLON','statement',7,'p_statement_call_with_args_and_assign_return','Esengo.py',466),
]
